import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as n,o as e}from"./app-C6fEsBfO.js";const l={};function h(t,s){return e(),a("div",null,s[0]||(s[0]=[n(`<h2 id="_01、casbin简介" tabindex="-1"><a class="header-anchor" href="#_01、casbin简介"><span>01、Casbin简介</span></a></h2><blockquote><p>casbin官网:<a href="https://casbin.org/" target="_blank" rel="noopener noreferrer">Casbin · An authorization library that supports access control models like ACL, RBAC, ABAC for Golang, Java, C/C++, Node.js, Javascript, PHP, Laravel, Python, .NET (C#), Delphi, Rust, Ruby, Swift (Objective-C), Lua (OpenResty), Dart (Flutter) and Elixir | Casbin</a></p></blockquote><p>Casbin 是一个强大的<code>开源访问控制框架</code>，专注于为不同场景下的权限管理提供灵活的解决方案。它支持多种访问控制模型，例如 <strong>ACL（访问控制列表）、RBAC（基于角色的访问控制）、ABAC（基于属性的访问控制）<strong>等，非常适合在复杂系统中实现精细化的</strong>权限管理</strong>。</p><h3 id="特点" tabindex="-1"><a class="header-anchor" href="#特点"><span>特点</span></a></h3><ol><li>支持多种访问<strong>控制模型</strong>：ACL（访问控制列表）、RBAC（基于角色的访问控制）、ABAC（基于属性的访问控制）以及其他模型（如多租户、多层级角色模型）</li><li>可扩展的<strong>策略存储</strong>：默认支持内存存储，同时也支持多种持久化方案（如：文件、数据库、redis等等）</li><li>灵活的<strong>策略表达式</strong>：Casbin 使用 Policy 格式 配置模型和规则来满足大部分的权限控制需求，另外提供基于 <code>Effector</code> 的决策机制</li><li><strong>高性能</strong>：设计轻量，可高效处理大规模访问请求</li><li><strong>多语言</strong>支持：原生支持Go语言，也提供其他开发语言</li></ol><h3 id="为什么要用这个casbin" tabindex="-1"><a class="header-anchor" href="#为什么要用这个casbin"><span>为什么要用这个casbin</span></a></h3><p>后台开发都会有角色和权限，不同的角色可以展示不同的页面，而权限意味着是否可以访问对应的api接口</p><p>在没有casbin的情况下：传统的权限管理方案可能是通过硬编码或数据库直接管理权限，这会导致下面一些问题：</p><p>修改权限规则需要开发接入，手动匹配用户角色、资源和操作，容易出错、高质量增加、效率低，代码复制还难维护甚至有安全隐患</p><h3 id="常见的应用场景" tabindex="-1"><a class="header-anchor" href="#常见的应用场景"><span>常见的应用场景：</span></a></h3><ol><li>企业权限管理： <ul><li>定义角色（如管理员、普通用户）并关联资源权限</li></ul></li><li>微服务架构中的权限控制： <ul><li>通过动态加载策略，为分布式服务提供统一的权限校验</li></ul></li><li>RESTful API 权限： <ul><li>使用路径匹配实现基于 URL 的权限控制</li></ul></li><li>多租户场景： <ul><li>支持租户隔离，确保权限的多层级控制</li></ul></li></ol><p><br><br></p><h2 id="_02、快速开始" tabindex="-1"><a class="header-anchor" href="#_02、快速开始"><span>02、快速开始</span></a></h2><br><h3 id="_1、初始化项目" tabindex="-1"><a class="header-anchor" href="#_1、初始化项目"><span>①、初始化项目</span></a></h3><div class="language-shell line-numbers-mode" data-highlighter="shiki" data-ext="shell" data-title="shell" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">mkdir</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> demo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">cd</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> demo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> &amp;&amp; </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> mod</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> init</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">go</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> get</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> github.com/casbin/casbin/v2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、casbin使用两个配置文件来设置控制访问" tabindex="-1"><a class="header-anchor" href="#_2、casbin使用两个配置文件来设置控制访问"><span>②、Casbin使用两个配置文件来设置控制访问</span></a></h3><ul><li><p>model.conf ：存储访问模型</p><div class="language-ini line-numbers-mode" data-highlighter="shiki" data-ext="ini" data-title="ini" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">[request_definition]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">r</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> sub, obj, act</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">[policy_definition]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> sub, obj, act</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">[matchers]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">  r.sub</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">= p.sub &amp;&amp; </span><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">r.obj</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">= p.obj &amp;&amp; </span><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">r.act</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">= p.act || </span><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">r.sub</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">= </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;root&quot;</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #只要访问主体是root一律放行。</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">[policy_effect]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;"> some(where (</span><span style="--shiki-light:#E45649;--shiki-dark:#C678DD;">p.eft</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> =</span><span style="--shiki-light:#383A42;--shiki-dark:#98C379;">= allow))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>policy.csv：存储了特定的用户权限配置</p><div class="language-sh line-numbers-mode" data-highlighter="shiki" data-ext="sh" data-title="sh" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">p,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> demo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /user,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> write</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        #demo用户对/user有write权限</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">p,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> demo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /order,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> read</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">        #demo用户对/order有read权限</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">p,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> demo1</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /user/userlist,read</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">   #demo1用户对/user/userlist有read权限</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">p,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> demo2</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /order/orderlist,read</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> #demo2用户对/order/orderlist有read权限</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h3 id="_3、检查权限" tabindex="-1"><a class="header-anchor" href="#_3、检查权限"><span>③、检查权限</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">	&quot;fmt&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">	&quot;github.com/casbin/casbin/v2&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">	&quot;log&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">	&quot;testing&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> CheckPermi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">e</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> *</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">casbin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Enforcer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> ,</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">sub</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">obj</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">act</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)  {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">	ok</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">err</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> :=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Enforce</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">sub</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">obj</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">act</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> err</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> !=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> nil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">		return</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> ok</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> ==</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> true</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">		fmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Printf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CAN </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%s</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> %s</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">sub</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">act</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">obj</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	} </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">else</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">		fmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Printf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> CANNOT </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%s</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> %s</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">sub</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">act</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">obj</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> TestCasBin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">( </span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">t</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> *</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">testing</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">T</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)  {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">	e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">err</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> :=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> casbin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">NewEnforcer</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;./model.conf&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;./policy.csv&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> err</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> !=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">nil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">		log</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Fatalf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;NewEnforecer failed:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%v</span><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">\\n</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">err</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	//基本权限设置</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">	CheckPermi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;demo&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/user&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;read&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">	CheckPermi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;demo&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/order&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;write&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">	CheckPermi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;demo1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/user/userlist&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;read&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">	CheckPermi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;demo1&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;/order/orderlist&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;write&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="存储" tabindex="-1"><a class="header-anchor" href="#存储"><span>存储</span></a></h2><h3 id="模型存储" tabindex="-1"><a class="header-anchor" href="#模型存储"><span>模型存储</span></a></h3><h3 id="策略存储" tabindex="-1"><a class="header-anchor" href="#策略存储"><span>策略存储</span></a></h3><h3 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h3><hr><h2 id="_03、工作原理" tabindex="-1"><a class="header-anchor" href="#_03、工作原理"><span>03、工作原理</span></a></h2><p>在Casbin中，访问控制模型被抽象为基于<strong>PERM元模型</strong>（<strong>策略，效果，请求，匹配器</strong>）的CONF文件。 为项目切换或升级授权机制就像修改配置一样简单。 您可以通过组合可用模型来定制自己的访问控制模型。</p><p>PERM模型由四个基础部分组成：策略，效果，请求和匹配器。 这些基础部分描述了资源和用户之间的关系。</p><h3 id="基本概念" tabindex="-1"><a class="header-anchor" href="#基本概念"><span>基本概念</span></a></h3><h4 id="request" tabindex="-1"><a class="header-anchor" href="#request"><span>Request</span></a></h4><blockquote><p>待鉴权的对象（谁对什么资源进行什么操作）</p></blockquote><p>定义请求参数。 基本请求是一个元组对象，至少需要一个主体（被访问实体），对象（被访问资源）和动作（访问方法）。</p><p>例如，请求定义可能看起来像这样：<code>r={sub,obj,act}</code></p><p>此定义指定了访问控制匹配函数所需的参数名称和顺序。</p><h4 id="policy" tabindex="-1"><a class="header-anchor" href="#policy"><span>Policy</span></a></h4><blockquote><p>策略也是我们定义的各自权限（指定了谁可以对哪些资源执行什么操作）</p></blockquote><p>定义访问策略的模型。 它指定了策略规则文档中字段的名称和顺序。</p><p>例如：<code>p={sub, obj, act}</code> 或 <code>p={sub, obj, act, eft}</code></p><p>注意：如果未定义eft（策略结果），则不会读取策略文件中的结果字段，匹配策略结果将默认允许。</p><h4 id="matcher" tabindex="-1"><a class="header-anchor" href="#matcher"><span>Matcher</span></a></h4><blockquote><p>定义上面两者执行怎么样的匹配</p></blockquote><p>定义请求和策略的匹配规则。</p><p>例如：<code>m = r.sub == p.sub &amp;&amp; r.act == p.act &amp;&amp; r.obj == p.obj</code> 这个简单而常见的匹配规则意味着，如果请求的参数（实体，资源和方法）等于策略中找到的那些，那么返回策略结果（<code>p.eft</code>）。 策略的结果将保存在<code>p.eft</code>中。</p><h4 id="effect" tabindex="-1"><a class="header-anchor" href="#effect"><span>Effect</span></a></h4><blockquote><p>代表着匹配结果</p></blockquote><p>对匹配器的匹配结果进行逻辑组合判断。</p><p>例如：<code>e = some(where(p.eft == allow))</code></p><p>这个语句意味着，如果匹配策略结果<code>p.eft</code>有（一些）允许的结果，那么最终结果为真。</p><p>让我们看另一个例子：</p><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>e = some(where (p.eft == allow)) &amp;&amp; !some(where (p.eft == deny))</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>这个例子组合的逻辑意义是：如果有一个策略匹配到允许的结果，并且没有策略匹配到拒绝的结果，结果为真。 换句话说，当匹配策略都是允许时，结果为真。 如果有任何拒绝，两者都为假（更简单地说，当允许和拒绝同时存在时，拒绝优先）。</p><hr><h3 id="什么是acl" tabindex="-1"><a class="header-anchor" href="#什么是acl"><span>⭐什么是ACL？</span></a></h3><p>ACL代表访问控制列表。 这是一种将用户映射到操作和操作映射到资源的方法。</p><h4 id="模型定义" tabindex="-1"><a class="header-anchor" href="#模型定义"><span>模型定义</span></a></h4><p>让我们考虑一个简单的ACL模型示例。</p><div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" data-title="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">request_definition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">r</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = s</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">ub, act, obj</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">policy_definition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = s</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">ub, act, obj</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">policy_effect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = s</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">ome(where (p.eft == allow))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">matchers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = r</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">.sub == p.sub &amp;&amp; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">r.obj</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> == p</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">.obj &amp;&amp; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">r.act</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> == p</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">.act</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><strong>request_definition</strong>是系统的查询模板。 例如，一个请求<code>alice, write, data1</code>可以被解释为&quot;主体Alice能否对对象&#39;data1&#39;执行&#39;write&#39;操作？&quot;。</li><li><code>policy_definition</code>是系统的分配模板。 例如，通过创建一个策略<code>alice, write, data1</code>，你就赋予了主体Alice在对象&#39;data1&#39;上执行&#39;write&#39;操作的权限。</li><li><code>policy_effect</code>定义了策略的效果。</li><li>在<code>matchers</code>部分，请求使用条件<code>r.sub == p.sub &amp;&amp; r.obj == p.obj &amp;&amp; r.act == p.act</code>与策略进行匹配。</li></ol><h4 id="现在让我们在casbin编辑器上测试模型" tabindex="-1"><a class="header-anchor" href="#现在让我们在casbin编辑器上测试模型"><span>现在让我们在Casbin编辑器上测试模型</span></a></h4><p>打开<a href="https://casbin.org/editor" target="_blank" rel="noopener noreferrer">编辑器</a>并将上述模型粘贴到模型编辑器中。</p><p>在策略编辑器中粘贴以下内容：</p><div class="language-csv line-numbers-mode" data-highlighter="shiki" data-ext="csv" data-title="csv" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">p,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> alice,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> read,</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> data1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">p,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> bob,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> write,</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> data2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>在请求编辑器中粘贴以下内容：</p><div class="language-csv line-numbers-mode" data-highlighter="shiki" data-ext="csv" data-title="csv" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">alice,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> read,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> data1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>结果将是：</p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" data-title="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="acl模型、策略和请求匹配的视觉表示" tabindex="-1"><a class="header-anchor" href="#acl模型、策略和请求匹配的视觉表示"><span>ACL模型、策略和请求匹配的视觉表示</span></a></h4><img src="https://gavvy-cloud.oss-cn-shenzhen.aliyuncs.com/web/Casbin_WorkACL.png" alt="acl" style="zoom:75%;"><h3 id="什么是rbac" tabindex="-1"><a class="header-anchor" href="#什么是rbac"><span>什么是RBAC？</span></a></h3><p>RBAC代表基于角色的访问控制。 在RBAC中，用户被分配一个资源的角色，一个角色可以包含任意的操作。 然后请求检查用户是否有权限在资源上执行操作。</p><h4 id="模型定义-1" tabindex="-1"><a class="header-anchor" href="#模型定义-1"><span>模型定义</span></a></h4><p>让我们考虑一个简单的RBAC模型：</p><div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" data-title="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">request_definition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">r</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = s</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">ub, act, obj</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">policy_definition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = s</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">ub, act, obj</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">role_definition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">g</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = _</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">, _</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">g2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = _</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">, _</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">policy_effect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = s</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">ome(where (p.eft == allow))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">matchers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = r</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">.sub == p.sub &amp;&amp; g(p.act, r.act) &amp;&amp; </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">r.obj</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> == p</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">.obj</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><code>role_definition</code>是一个图关系构建器，它使用图来比较请求对象和策略对象。</li></ol><h4 id="现在让我们在casbin编辑器上测试模型-1" tabindex="-1"><a class="header-anchor" href="#现在让我们在casbin编辑器上测试模型-1"><span>现在让我们在Casbin编辑器上测试模型</span></a></h4><p>打开<a href="https://casbin.org/editor" target="_blank" rel="noopener noreferrer">编辑器</a>并将上述模型粘贴到模型编辑器中。</p><p>在策略编辑器中粘贴以下内容：</p><div class="language-csv line-numbers-mode" data-highlighter="shiki" data-ext="csv" data-title="csv" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">p,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> alice,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> reader,</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> data1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">p,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> bob,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> owner,</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> data2</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">g,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> reader,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> read</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">g,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> owner,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> read</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">g,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> owner,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> write</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>在请求编辑器中粘贴以下内容：</p><div class="language-csv line-numbers-mode" data-highlighter="shiki" data-ext="csv" data-title="csv" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">alice,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> read,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> data1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">alice,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> write,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> data1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">bob,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> write,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> data2</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">bob,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> read,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> data2</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">bob,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> write,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> data1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>结果将是：</p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" data-title="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>true</span></span>
<span class="line"><span>false</span></span>
<span class="line"><span>true</span></span>
<span class="line"><span>true</span></span>
<span class="line"><span>false</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="rbac模型、策略和请求匹配的视觉表示" tabindex="-1"><a class="header-anchor" href="#rbac模型、策略和请求匹配的视觉表示"><span>RBAC模型、策略和请求匹配的视觉表示</span></a></h4><img src="https://gavvy-cloud.oss-cn-shenzhen.aliyuncs.com/web/Casbin_WorkRBAC1.png" alt="rbac" style="zoom:75%;"><p><code>g - Role to action mapping</code>表有一个图映射角色到操作。 这个图可以被编码为一系列的边，如在策略中所示，这是表示图的一种常见方式：</p><div class="language-csv line-numbers-mode" data-highlighter="shiki" data-ext="csv" data-title="csv" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">g,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> reader,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> read</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">g,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> owner,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> read</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">g,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> owner,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> write</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p><code>p</code>表示一个可以使用<code>==</code>操作符进行比较的普通策略。 <code>g</code>是一个基于图的比较函数。 你可以通过添加数字后缀如<code>g, g2, g3, ...</code>等来定义多个图比较器。</p></div><hr><h3 id="什么是分层rbac" tabindex="-1"><a class="header-anchor" href="#什么是分层rbac"><span>什么是分层RBAC？</span></a></h3><p>在分层RBAC中，有多种类型的资源，并且资源类型之间存在继承关系。 例如，“订阅”是一种类型，“资源组”是另一种类型。 类型为<strong>订阅</strong>的sub1可以包含多个类型为<strong>资源组</strong>的资源组（rg1，rg2）。</p><p>与资源层次结构类似，将有两种类型的角色和操作：订阅角色和操作，以及资源组角色和操作。 订阅角色和资源组角色之间存在任意关系。 例如，考虑一个订阅角色<strong>sub-owner</strong>。 这个角色被一个资源组角色<strong>rg-owner</strong>继承，这意味着如果我在订阅<strong>sub1</strong>上被分配了<strong>sub-owner</strong>角色，那么我自动也获得了<strong>rg1和rg2</strong>上的<strong>rg-owner</strong>角色。</p><h4 id="模型定义-2" tabindex="-1"><a class="header-anchor" href="#模型定义-2"><span>模型定义</span></a></h4><p>让我们以<strong>分层RBAC</strong>模型的一个简单例子来说明：</p><div class="language-toml line-numbers-mode" data-highlighter="shiki" data-ext="toml" data-title="toml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">request_definition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">r</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = s</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">ub, act, obj</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">policy_definition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">p</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = s</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">ub, act, obj</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">role_definition</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">g</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = _</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">, _</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">g2</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = _</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">, _</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">policy_effect</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">e</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = s</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">ome(where (p.eft == allow))</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">[</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">matchers</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">]</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">m</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> = r</span><span style="--shiki-light:white;--shiki-dark:#FFFFFF;">.sub == p.sub &amp;&amp; g(p.act, r.act) &amp;&amp; g2(p.obj, r.obj)</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li><strong>role_definition</strong>是一个图关系构建器，它使用图来比较请求对象和策略对象。</li></ol><h4 id="现在让我们在casbin编辑器上测试这个模型" tabindex="-1"><a class="header-anchor" href="#现在让我们在casbin编辑器上测试这个模型"><span>现在让我们在Casbin编辑器上测试这个模型</span></a></h4><p>打开<a href="https://casbin.org/editor" target="_blank" rel="noopener noreferrer">编辑器</a>并将上述模型粘贴到模型编辑器中。</p><p>在策略编辑器中粘贴以下内容：</p><div class="language-csv line-numbers-mode" data-highlighter="shiki" data-ext="csv" data-title="csv" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">p,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> alice,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> sub-reader,</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> sub1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">p,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> bob,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> rg-owner,</span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;"> rg2</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">// subscription role to subscription action mapping</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">g,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> sub-reader,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> sub-read</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">g,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> sub-owner,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> sub-read</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">g,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> sub-owner,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> sub-write</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">// resourceGroup role to resourceGroup action mapping</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">g,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> rg-reader,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> rg-read</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">g,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> rg-owner,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> rg-read</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">g,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> rg-owner,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> rg-write</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">// subscription role to resourceGroup role mapping</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">g,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> sub-reader,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> rg-reader</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">g,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> sub-owner,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> rg-owner</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">// subscription resource to resourceGroup resource mapping</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">g2,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> sub1,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> rg1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">g2,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> sub2,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> rg2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>并在请求编辑器中粘贴以下内容：</p><div class="language-csv line-numbers-mode" data-highlighter="shiki" data-ext="csv" data-title="csv" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">alice,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> rg-read,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> rg1</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>结果将是：</p><div class="language-text line-numbers-mode" data-highlighter="shiki" data-ext="text" data-title="text" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>true</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><h4 id="rbac模型、策略和请求匹配的视觉表示-1" tabindex="-1"><a class="header-anchor" href="#rbac模型、策略和请求匹配的视觉表示-1"><span>RBAC模型、策略和请求匹配的视觉表示</span></a></h4><img src="https://gavvy-cloud.oss-cn-shenzhen.aliyuncs.com/web/Casbin_WorkRBAC.png" alt="hrbac-1350d755e04234a34394996344d2b259" style="zoom:70%;"><p><strong>g - 角色到（操作，角色）映射</strong>表有一个图映射角色到操作，角色映射。 这个图可以被编码为一系列的边，如策略中所示，这是表示图的常见方式：</p><div class="language-csv line-numbers-mode" data-highlighter="shiki" data-ext="csv" data-title="csv" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">// subscription role to subscription action mapping</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">g,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> sub-reader,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> sub-read</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">g,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> sub-owner,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> sub-read</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">g,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> sub-owner,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> sub-write</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">// resourceGroup role to resourceGroup action mapping</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">g,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> rg-reader,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> rg-read</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">g,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> rg-owner,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> rg-read</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">g,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> rg-owner,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> rg-write</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">// subscription role to resourceGroup role mapping</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">g,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> sub-reader,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> rg-reader</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">g,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> sub-owner,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> rg-owner</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><strong>g2 - 订阅到资源组映射</strong>表有一个图映射订阅到资源组：</p><div class="language-csv line-numbers-mode" data-highlighter="shiki" data-ext="csv" data-title="csv" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">// subscription resource to resourceGroup resource mapping</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">g2,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> sub1,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> rg1</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">g2,</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> sub2,</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> rg2</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h5 id="主题匹配视觉表示" tabindex="-1"><a class="header-anchor" href="#主题匹配视觉表示"><span>主题匹配视觉表示</span></a></h5><img src="https://gavvy-cloud.oss-cn-shenzhen.aliyuncs.com/web/Casbin_WorkRBACsub.png" alt="hrbac-sub-match" style="zoom:67%;"><h5 id="操作匹配视觉表示" tabindex="-1"><a class="header-anchor" href="#操作匹配视觉表示"><span>操作匹配视觉表示</span></a></h5><img src="https://gavvy-cloud.oss-cn-shenzhen.aliyuncs.com/web/Casbin_WorkRBACact.png" alt="hrbac-act-match" style="zoom:67%;"><h5 id="对象匹配视觉表示" tabindex="-1"><a class="header-anchor" href="#对象匹配视觉表示"><span>对象匹配视觉表示</span></a></h5><img src="https://gavvy-cloud.oss-cn-shenzhen.aliyuncs.com/web/Casbin_WorkRBACobj.png" alt="hrbac-obj-match" style="zoom:67%;"><div class="hint-container tip"><p class="hint-container-title">提示</p><p>当一个请求提交给Casbin时，所有的策略都会进行这种匹配。 如果至少有一个策略匹配，那么请求的结果为真。 如果没有策略匹配请求，那么结果为假。</p></div>`,116)]))}const r=i(l,[["render",h],["__file","casbin.html.vue"]]),d=JSON.parse('{"path":"/middleware/%E9%89%B4%E6%9D%83/casbin.html","title":"Casbin-权限管理","lang":"zh-CN","frontmatter":{"title":"Casbin-权限管理","order":3,"author":"xiaoxie","date":"2020-01-01T00:00:00.000Z","tag":["权限"],"star":true,"description":"01、Casbin简介 casbin官网:Casbin · An authorization library that supports access control models like ACL, RBAC, ABAC for Golang, Java, C/C++, Node.js, Javascript, PHP, Laravel, Pytho...","head":[["meta",{"property":"og:url","content":"https://Cospk.github.io/vuepress-app/middleware/%E9%89%B4%E6%9D%83/casbin.html"}],["meta",{"property":"og:site_name","content":"Golang全栈指南"}],["meta",{"property":"og:title","content":"Casbin-权限管理"}],["meta",{"property":"og:description","content":"01、Casbin简介 casbin官网:Casbin · An authorization library that supports access control models like ACL, RBAC, ABAC for Golang, Java, C/C++, Node.js, Javascript, PHP, Laravel, Pytho..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-07T17:31:50.000Z"}],["meta",{"property":"article:author","content":"xiaoxie"}],["meta",{"property":"article:tag","content":"权限"}],["meta",{"property":"article:published_time","content":"2020-01-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-07T17:31:50.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Casbin-权限管理\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-01-01T00:00:00.000Z\\",\\"dateModified\\":\\"2025-01-07T17:31:50.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xiaoxie\\"}]}"]]},"headers":[{"level":2,"title":"01、Casbin简介","slug":"_01、casbin简介","link":"#_01、casbin简介","children":[{"level":3,"title":"特点","slug":"特点","link":"#特点","children":[]},{"level":3,"title":"为什么要用这个casbin","slug":"为什么要用这个casbin","link":"#为什么要用这个casbin","children":[]},{"level":3,"title":"常见的应用场景：","slug":"常见的应用场景","link":"#常见的应用场景","children":[]}]},{"level":2,"title":"02、快速开始","slug":"_02、快速开始","link":"#_02、快速开始","children":[{"level":3,"title":"①、初始化项目","slug":"_1、初始化项目","link":"#_1、初始化项目","children":[]},{"level":3,"title":"②、Casbin使用两个配置文件来设置控制访问","slug":"_2、casbin使用两个配置文件来设置控制访问","link":"#_2、casbin使用两个配置文件来设置控制访问","children":[]},{"level":3,"title":"③、检查权限","slug":"_3、检查权限","link":"#_3、检查权限","children":[]}]},{"level":2,"title":"存储","slug":"存储","link":"#存储","children":[{"level":3,"title":"模型存储","slug":"模型存储","link":"#模型存储","children":[]},{"level":3,"title":"策略存储","slug":"策略存储","link":"#策略存储","children":[]},{"level":3,"title":"","slug":"","link":"#","children":[]}]},{"level":2,"title":"03、工作原理","slug":"_03、工作原理","link":"#_03、工作原理","children":[{"level":3,"title":"基本概念","slug":"基本概念","link":"#基本概念","children":[]},{"level":3,"title":"⭐什么是ACL？","slug":"什么是acl","link":"#什么是acl","children":[]},{"level":3,"title":"什么是RBAC？","slug":"什么是rbac","link":"#什么是rbac","children":[]},{"level":3,"title":"什么是分层RBAC？","slug":"什么是分层rbac","link":"#什么是分层rbac","children":[]}]}],"git":{"createdTime":1735628969000,"updatedTime":1736271110000,"contributors":[{"name":"xiaoxie001","username":"xiaoxie001","email":"xie18115@outlook.com","commits":2,"url":"https://github.com/xiaoxie001"}]},"readingTime":{"minutes":9.96,"words":2987},"filePathRelative":"middleware/鉴权/casbin.md","localizedDate":"2020年1月1日","autoDesc":true,"excerpt":"<h2>01、Casbin简介</h2>\\n<blockquote>\\n<p>casbin官网:<a href=\\"https://casbin.org/\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">Casbin · An authorization library that supports access control models like ACL, RBAC, ABAC for Golang, Java, C/C++, Node.js, Javascript, PHP, Laravel, Python, .NET (C#), Delphi, Rust, Ruby, Swift (Objective-C), Lua (OpenResty), Dart (Flutter) and Elixir | Casbin</a></p>\\n</blockquote>"}');export{r as comp,d as data};
