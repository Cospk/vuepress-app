import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,a as x,o as s}from"./app-DIJDtupu.js";const t={};function d(o,e){return s(),r("div",null,e[0]||(e[0]=[x('<div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" data-title="" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span> (gdb) disas Dump of assembler code for function main.main: 0x00000000004010b0 : mov %fs:0xfffffffffffffff8,%rcx 0x00000000004010b9 : cmp 0x10(%rcx),%rsp 0x00000000004010bd : jbe 0x4010de 0x00000000004010bf : sub $0x18,%rsp 0x00000000004010c3 : movq $0x1,(%rsp) 0x00000000004010cb : movq $0x2,0x8(%rsp) 0x00000000004010d4 : callq 0x401000 0x00000000004010d9 : add $0x18,%rsp 0x00000000004010dd : retq 0x00000000004010de : callq 0x44abd0 0x00000000004010e3 : jmp 0x4010b0 0x00000000004010e5 : add %al,(%rax) 0x00000000004010e7 : add %al,(%rax) 0x00000000004010e9 : add %al,(%rax) 0x00000000004010eb : add %al,(%rax) 0x00000000004010ed : add %al,(%rax) 0x00000000004010ef : add %ah,-0x75(%rax,%rcx,2) End of assembler dump. (gdb) disas Dump of assembler code for function main.f: 0x0000000000401000 : mov %fs:0xfffffffffffffff8,%rcx 0x0000000000401009 : cmp 0x10(%rcx),%rsp 0x000000000040100d : jbe 0x401097 0x0000000000401013 : sub $0x20,%rsp 0x0000000000401017 : mov 0x28(%rsp),%rbx 0x000000000040101c : mov 0x30(%rsp),%rbp 0x0000000000401021 : add %rbp,%rbx 0x0000000000401024 : mov %rbx,0x10(%rsp) 0x0000000000401029 : xor %eax,%eax 0x000000000040102b : mov %rax,0x18(%rsp) 0x0000000000401030 : cmp $0x3e8,%rax 0x0000000000401036 : jge 0x401088 ...... 0x0000000000401088 : mov 0x10(%rsp),%rbx 0x000000000040108d : mov %rbx,0x38(%rsp) 0x0000000000401092 : add $0x20,%rsp</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div>',1)]))}const l=a(t,[["render",d],["__file","Golang协程栈概述.html.vue"]]),p=JSON.parse('{"path":"/golang/%E5%8E%9F%E7%90%86/theory/Golang%E5%8D%8F%E7%A8%8B%E6%A0%88%E6%A6%82%E8%BF%B0.html","title":"Golang协程栈概述","lang":"zh-CN","frontmatter":{"title":"Golang协程栈概述","source_url":"https://studygolang.com/articles/11858","category":"Go原理教程","head":[["meta",{"property":"og:url","content":"https://Cospk.github.io/vuepress-app/golang/%E5%8E%9F%E7%90%86/theory/Golang%E5%8D%8F%E7%A8%8B%E6%A0%88%E6%A6%82%E8%BF%B0.html"}],["meta",{"property":"og:site_name","content":"Golang全栈指南"}],["meta",{"property":"og:title","content":"Golang协程栈概述"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-08-27T12:02:38.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-27T12:02:38.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Golang协程栈概述\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-08-27T12:02:38.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cospk\\",\\"url\\":\\"https://savvygo.cn\\"}]}"]]},"headers":[],"git":{"createdTime":1756202807000,"updatedTime":1756296158000,"contributors":[{"name":"shiwei","username":"shiwei","email":"xie@gmail.com","commits":2,"url":"https://github.com/shiwei"}]},"readingTime":{"minutes":0.58,"words":173},"filePathRelative":"golang/原理/theory/Golang协程栈概述.md","localizedDate":"2025年8月26日","excerpt":"<div class=\\"language- line-numbers-mode\\" data-highlighter=\\"shiki\\" data-ext=\\"\\" data-title=\\"\\" style=\\"--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34\\"><pre class=\\"shiki shiki-themes one-light one-dark-pro vp-code\\"><code><span class=\\"line\\"><span> (gdb) disas Dump of assembler code for function main.main: 0x00000000004010b0 : mov %fs:0xfffffffffffffff8,%rcx 0x00000000004010b9 : cmp 0x10(%rcx),%rsp 0x00000000004010bd : jbe 0x4010de 0x00000000004010bf : sub $0x18,%rsp 0x00000000004010c3 : movq $0x1,(%rsp) 0x00000000004010cb : movq $0x2,0x8(%rsp) 0x00000000004010d4 : callq 0x401000 0x00000000004010d9 : add $0x18,%rsp 0x00000000004010dd : retq 0x00000000004010de : callq 0x44abd0 0x00000000004010e3 : jmp 0x4010b0 0x00000000004010e5 : add %al,(%rax) 0x00000000004010e7 : add %al,(%rax) 0x00000000004010e9 : add %al,(%rax) 0x00000000004010eb : add %al,(%rax) 0x00000000004010ed : add %al,(%rax) 0x00000000004010ef : add %ah,-0x75(%rax,%rcx,2) End of assembler dump. (gdb) disas Dump of assembler code for function main.f: 0x0000000000401000 : mov %fs:0xfffffffffffffff8,%rcx 0x0000000000401009 : cmp 0x10(%rcx),%rsp 0x000000000040100d : jbe 0x401097 0x0000000000401013 : sub $0x20,%rsp 0x0000000000401017 : mov 0x28(%rsp),%rbx 0x000000000040101c : mov 0x30(%rsp),%rbp 0x0000000000401021 : add %rbp,%rbx 0x0000000000401024 : mov %rbx,0x10(%rsp) 0x0000000000401029 : xor %eax,%eax 0x000000000040102b : mov %rax,0x18(%rsp) 0x0000000000401030 : cmp $0x3e8,%rax 0x0000000000401036 : jge 0x401088 ...... 0x0000000000401088 : mov 0x10(%rsp),%rbx 0x000000000040108d : mov %rbx,0x38(%rsp) 0x0000000000401092 : add $0x20,%rsp</span></span></code></pre>\\n<div class=\\"line-numbers\\" aria-hidden=\\"true\\" style=\\"counter-reset:line-number 0\\"><div class=\\"line-number\\"></div></div></div>"}');export{l as comp,p as data};
