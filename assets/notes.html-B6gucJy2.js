import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,a as o,o as a}from"./app-DIJDtupu.js";const i={};function r(l,e){return a(),n("div",null,e[0]||(e[0]=[o('<h2 id="internal包" tabindex="-1"><a class="header-anchor" href="#internal包"><span>internal包</span></a></h2><blockquote><p>Go语言的internal包规则：internal包只能被同一个父目录下的包引用。</p></blockquote><p>注：这个限制对于同一个项目来说没有限制（internal包一般是项目根目录下的）、这个限制是对于<strong>项目被其他项目引入作为依赖</strong>才起作用</p><ul><li><p>假设你有一个项目A，其中包含internal包，那么项目A中的所有代码都可以引用这个internal包。</p></li><li><p>如果另一个项目B想要使用项目A作为依赖，它可以通过go mod引入项目A，但是B项目中的代码不能引用A项目中的internal包。</p></li></ul><h2 id="doc-go文件" tabindex="-1"><a class="header-anchor" href="#doc-go文件"><span>doc.go文件</span></a></h2><blockquote><p>平时浏览一些流行的开源项目时会经常看到一些目录下有一个doc.go文件。主要的作用还是给这个包一个注释</p></blockquote>',6)]))}const s=t(i,[["render",r],["__file","notes.html.vue"]]),d=JSON.parse('{"path":"/golang/%E8%BF%9B%E9%98%B6/notes.html","title":"注意事项","lang":"zh-CN","frontmatter":{"title":"注意事项","order":2,"author":"xiaoxie","date":"2025-01-01T00:00:00.000Z","tag":["db"],"star":true,"description":"internal包 Go语言的internal包规则：internal包只能被同一个父目录下的包引用。 注：这个限制对于同一个项目来说没有限制（internal包一般是项目根目录下的）、这个限制是对于项目被其他项目引入作为依赖才起作用 假设你有一个项目A，其中包含internal包，那么项目A中的所有代码都可以引用这个internal包。 如果另一个项...","head":[["meta",{"property":"og:url","content":"https://Cospk.github.io/vuepress-app/golang/%E8%BF%9B%E9%98%B6/notes.html"}],["meta",{"property":"og:site_name","content":"Golang全栈指南"}],["meta",{"property":"og:title","content":"注意事项"}],["meta",{"property":"og:description","content":"internal包 Go语言的internal包规则：internal包只能被同一个父目录下的包引用。 注：这个限制对于同一个项目来说没有限制（internal包一般是项目根目录下的）、这个限制是对于项目被其他项目引入作为依赖才起作用 假设你有一个项目A，其中包含internal包，那么项目A中的所有代码都可以引用这个internal包。 如果另一个项..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-18T03:55:25.000Z"}],["meta",{"property":"article:author","content":"xiaoxie"}],["meta",{"property":"article:tag","content":"db"}],["meta",{"property":"article:published_time","content":"2025-01-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-18T03:55:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"注意事项\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2025-01-01T00:00:00.000Z\\",\\"dateModified\\":\\"2025-03-18T03:55:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xiaoxie\\"}]}"]]},"headers":[{"level":2,"title":"internal包","slug":"internal包","link":"#internal包","children":[]},{"level":2,"title":"doc.go文件","slug":"doc-go文件","link":"#doc-go文件","children":[]}],"git":{"createdTime":1742270125000,"updatedTime":1742270125000,"contributors":[{"name":"xiaoxie01","username":"xiaoxie01","email":"xie18115@gmail.com","commits":1,"url":"https://github.com/xiaoxie01"}]},"readingTime":{"minutes":0.93,"words":279},"filePathRelative":"golang/进阶/notes.md","localizedDate":"2025年1月1日","autoDesc":true,"excerpt":"<h2>internal包</h2>\\n<blockquote>\\n<p>Go语言的internal包规则：internal包只能被同一个父目录下的包引用。</p>\\n</blockquote>\\n<p>注：这个限制对于同一个项目来说没有限制（internal包一般是项目根目录下的）、这个限制是对于<strong>项目被其他项目引入作为依赖</strong>才起作用</p>\\n<ul>\\n<li>\\n<p>假设你有一个项目A，其中包含internal包，那么项目A中的所有代码都可以引用这个internal包。</p>\\n</li>\\n<li>\\n<p>如果另一个项目B想要使用项目A作为依赖，它可以通过go mod引入项目A，但是B项目中的代码不能引用A项目中的internal包。</p>\\n</li>\\n</ul>"}');export{s as comp,d as data};
