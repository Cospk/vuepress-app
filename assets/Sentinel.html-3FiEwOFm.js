import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as n,o as t}from"./app-Da47ddN4.js";const l={};function h(e,s){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="限流-降级-熔断" tabindex="-1"><a class="header-anchor" href="#限流-降级-熔断"><span>限流 &amp; 降级 &amp; 熔断</span></a></h1><h2 id="快速理解" tabindex="-1"><a class="header-anchor" href="#快速理解"><span>快速理解</span></a></h2><blockquote><p>我们一般开发的服务处理请求的能力是有限的，若是接收请求数量达到一定程度服务就会崩溃，不能处理其他的服务的请求引起雪崩效应</p><p>本节考虑的主要是解决大量请求导致服务器崩溃而引起的雪崩效应问题</p><p>核心：<strong>限流</strong>将流量请求限制在服务能力范围内</p><p>​ <strong>熔断降级</strong>是为了解决服务崩溃导致其他服务不可用甚至扩展效应导致服务雪崩效应</p></blockquote><table><thead><tr><th style="text-align:center;"></th><th style="text-align:center;"><strong>限流</strong></th><th style="text-align:center;"><strong>熔断</strong></th></tr></thead><tbody><tr><td style="text-align:center;"><strong>保护目标</strong></td><td style="text-align:center;">当前服务</td><td style="text-align:center;">当前服务与下游服务</td></tr><tr><td style="text-align:center;"><strong>触发条件</strong></td><td style="text-align:center;">请求量过大</td><td style="text-align:center;">调用下游服务失败或响应过慢</td></tr><tr><td style="text-align:center;"><strong>处理方式</strong></td><td style="text-align:center;">拒绝部分请求</td><td style="text-align:center;">停止调用下游服务</td></tr><tr><td style="text-align:center;"><strong>恢复机制</strong></td><td style="text-align:center;">持续控制流量</td><td style="text-align:center;">半开状态检测下游服务恢复后恢复调用</td></tr><tr><td style="text-align:center;"><strong>典型场景</strong></td><td style="text-align:center;">短时间内流量暴增（如秒杀活动）</td><td style="text-align:center;">下游服务不可用或性能下降（如故障或拥堵）</td></tr></tbody></table><hr><h3 id="举两个例子" tabindex="-1"><a class="header-anchor" href="#举两个例子"><span>举两个例子</span></a></h3><p><strong>限流场景：秒杀活动</strong></p><p>假如一个商品秒杀活动开始，10万个用户同时发起请求，但你的服务只能处理 1000 QPS：</p><ol><li>配置限流规则，限制最大 QPS 为 1000。</li><li>Sentinel 会拦截超过 1000 QPS 的请求，直接返回 &quot;服务繁忙，请稍后再试&quot;。</li><li>避免服务因流量过大被压垮。</li></ol><hr><h4 id="熔断场景-调用下游支付服务" tabindex="-1"><a class="header-anchor" href="#熔断场景-调用下游支付服务"><span><strong>熔断场景：调用下游支付服务</strong></span></a></h4><p>你的订单服务调用支付服务，如果支付服务突然响应超时或错误激增：</p><ol><li>Sentinel 监控到支付服务的响应时间过长或错误比率过高。</li><li>触发熔断，直接返回 &quot;支付服务繁忙，请稍后再试&quot; 给用户。</li><li>一段时间后，Sentinel 半开状态尝试调用支付服务，如果恢复正常，解除熔断。</li><li>避免订单服务因等待支付服务导致线程资源耗尽，同时提升响应速度。</li></ol><hr><h3 id="什么是服务雪崩" tabindex="-1"><a class="header-anchor" href="#什么是服务雪崩"><span>什么是服务雪崩：</span></a></h3><p>服务雪崩效应是一种因服务提供者不可用导致服务调用者的不可用，并将不可用扩大的过程</p><h4 id="原因" tabindex="-1"><a class="header-anchor" href="#原因"><span>原因：</span></a></h4><p>a、一些设备出现故障：硬件问题，比如驱动错误，内存中断或者出现死锁</p><p>b、服务器的负载承受不住：用户行为，比如双十一活动，导致大量请求超出服务器可以承受的范围导致服务器崩溃不可以</p><p>c、代码问题：比如服务运行出现一些代码上的bug也会导致服务直接挂掉</p><h4 id="解决" tabindex="-1"><a class="header-anchor" href="#解决"><span>解决：</span></a></h4><p>4中策略：服务隔离、超时机制、<strong>限流模式、服务熔断降级</strong></p><ul><li><p>服务隔离：2种方式-线程池隔离和信号量隔离</p><p>1、线程池隔离：每一个服务接口都有自己独立的线程池，每个线程互不影响</p><p>2、信号量隔离：用一个计数器记录当前有多少个线程，请求进来先判断是否超出最大，超出拒绝，没有就+1，执行结束-1</p></li><li><p>超时机制：2种方式 - 请求等待超时、请求运行超时</p><p>1、等待超时：判断入队时间是否超出最大超时时间，超过了直接丢弃</p><p>2、运行超时：直接使用线程池提供的get方法</p></li><li><p><strong>限流模式：<strong>其他的属于出错后的容错机制，而</strong>限流模式是预防机制。设置最大的QPS阈值</strong>，超出的根据规则处理，比如直接丢弃或等待多少秒再丢弃，不再提供服务。这种机制只能解决系统资源分配问题，因为对于没有被限流的服务也可能出现雪崩效应</p></li><li><p><strong>服务熔断降级：熔断机制是为了保护服务，降级是不可以但是给用户一个友好的提示</strong>，两者一般一起用。在高并发情况下，如果请求达到一定极限会直接拒绝访问。然后一段时间判断是否可以重新启用。设计分了三个模块：熔断请求判断算法、熔断恢复机制、熔断报警</p></li></ul><h4 id="技术选型-sentinel组件" tabindex="-1"><a class="header-anchor" href="#技术选型-sentinel组件"><span>技术选型：Sentinel组件</span></a></h4><p>Sentinel：是面向分布式服务架构的轻量级高可用流量控制组件。Sentinel 主要以流量为切入点，从流量控制、熔断降级、系统负载保护等多个维度来帮助用户提升服务的稳定性。</p><p>后续直接使用sentinel组件完成限流、熔断降级</p><hr><h2 id="sentinel-的限流和熔断实现的底层原理" tabindex="-1"><a class="header-anchor" href="#sentinel-的限流和熔断实现的底层原理"><span>Sentinel 的限流和熔断实现的底层原理</span></a></h2><p>Sentinel 是阿里巴巴开源的一款<strong>分布式流量控制和熔断框架</strong>，主要用于<strong>保护微服务系统的稳定性</strong>。其底层实现围绕流量统计、规则</p><p>匹配和策略执行来展开。以下是它实现限流和熔断的核心原理：</p><hr><h3 id="_1-限流的实现原理" tabindex="-1"><a class="header-anchor" href="#_1-限流的实现原理"><span><strong>1. 限流的实现原理</strong></span></a></h3><h4 id="_1-1-数据采集与统计" tabindex="-1"><a class="header-anchor" href="#_1-1-数据采集与统计"><span><strong>1.1 数据采集与统计</strong></span></a></h4><p>Sentinel 通过对资源访问的实时统计，监控请求的流量、并发量等关键指标，主要使用<strong>滑动窗口和令牌桶算法</strong>进行流量控制：</p><ul><li><p><strong>滑动窗口</strong></p><ul><li>分段统计固定时间窗口内的请求数量，用于流量统计。</li></ul><ul><li>将时间分成多个小片段（Bucket），每个桶记录片段内的请求数。</li><li>滑动时按时间移动窗口，通过累加当前窗口所有桶的数据得到实时流量。</li></ul></li><li><p><strong>令牌桶</strong>：实现请求速率限制，按照固定速率生成令牌，只有当请求获取令牌时才能通过，否则被限流。</p></li></ul><blockquote><p>Sentinel 底层采用滑动窗口 + 令牌桶相结合的方式，根据实际规则执行流量控制。</p></blockquote><h4 id="_1-2-配置规则" tabindex="-1"><a class="header-anchor" href="#_1-2-配置规则"><span><strong>1.2 配置规则</strong></span></a></h4><p>用户可以为特定资源设置限流规则：</p><ul><li><strong>QPS 限流</strong>：限制每秒通过的请求数。</li><li><strong>并发限流</strong>：限制并发请求数。</li><li><strong>基于调用链路的限流</strong>：针对调用链路中的某些资源设定规则，防止链路关键点的过载。</li><li><strong>基于自定义条件的限流</strong>：用户可以通过扩展接口，基于自定义条件执行限流。</li></ul><h4 id="_1-3-执行限流" tabindex="-1"><a class="header-anchor" href="#_1-3-执行限流"><span><strong>1.3 执行限流</strong></span></a></h4><ul><li>当一个请求到达时，Sentinel 通过拦截器（例如 AOP 或 HTTP 过滤器）检查当前资源的流量统计数据。</li><li>根据规则匹配，判断是否允许请求通过： <ul><li><strong>允许通过</strong>：更新统计数据，并放行请求。</li><li><strong>拒绝通过</strong>：触发限流逻辑（如返回特定错误、执行降级逻辑等）。</li></ul></li></ul><hr><h3 id="_2-熔断的实现原理" tabindex="-1"><a class="header-anchor" href="#_2-熔断的实现原理"><span><strong>2. 熔断的实现原理</strong></span></a></h3><h4 id="_2-1-熔断指标统计" tabindex="-1"><a class="header-anchor" href="#_2-1-熔断指标统计"><span><strong>2.1 熔断指标统计</strong></span></a></h4><p>Sentinel 会实时统计资源调用的状态，包括以下指标：</p><ul><li><strong>请求数量</strong>：一段时间内的总请求数。</li><li><strong>失败率</strong>：失败请求数占总请求数的百分比。</li><li><strong>响应时间</strong>：请求的平均响应时间。</li></ul><p>这些统计指标也是基于滑动窗口实现的，每个窗口细分为多个桶，确保统计数据的实时性和准确性。</p><h4 id="_2-2-熔断规则" tabindex="-1"><a class="header-anchor" href="#_2-2-熔断规则"><span><strong>2.2 熔断规则</strong></span></a></h4><p>用户可以为资源配置熔断规则，Sentinel 支持以下几种熔断策略：</p><ol><li>响应时间策略： <ul><li>当请求的平均响应时间超过阈值，且请求量达到设定的最小值时，触发熔断。</li></ul></li><li>错误比率策略： <ul><li>当错误请求数占总请求数的比率超过设定阈值时，触发熔断。</li></ul></li><li>错误数量策略： <ul><li>当错误请求数量超过设定的阈值时，触发熔断。</li></ul></li></ol><h4 id="_2-3-执行熔断" tabindex="-1"><a class="header-anchor" href="#_2-3-执行熔断"><span><strong>2.3 执行熔断</strong></span></a></h4><ul><li>当某个熔断规则被触发时，Sentinel 会将该资源标记为“熔断状态”，在一定时间内拒绝请求，保护下游系统。</li><li><strong>半开状态</strong>：熔断的资源经过一个恢复期（<code>RecoveryTimeout</code>）后，会进入半开状态，允许少量请求通过以测试系统是否恢复正常。</li><li>如果恢复正常（通过请求无异常），关闭熔断；如果恢复失败（异常仍然存在），重新进入熔断状态。</li></ul><hr><h3 id="_3-核心模块" tabindex="-1"><a class="header-anchor" href="#_3-核心模块"><span><strong>3. 核心模块</strong></span></a></h3><h4 id="_3-1-流量统计模块" tabindex="-1"><a class="header-anchor" href="#_3-1-流量统计模块"><span><strong>3.1 流量统计模块</strong></span></a></h4><ul><li><strong>滑动窗口</strong>：记录请求的时间、数量、响应状态等数据，精度可调。</li><li><strong>令牌桶算法</strong>：控制请求速率。</li><li><strong>并发计数</strong>：通过原子计数或信号量控制并发量。</li></ul><h4 id="_3-2-规则管理模块" tabindex="-1"><a class="header-anchor" href="#_3-2-规则管理模块"><span><strong>3.2 规则管理模块</strong></span></a></h4><ul><li>动态加载规则，支持从配置文件、数据库、控制台等多种来源加载规则。</li><li>规则存储在内存中，高效匹配并动态更新。</li></ul><h4 id="_3-3-策略执行模块" tabindex="-1"><a class="header-anchor" href="#_3-3-策略执行模块"><span><strong>3.3 策略执行模块</strong></span></a></h4><ul><li><strong>限流策略</strong>：在统计数据达到设定阈值时，执行限流逻辑。</li><li><strong>熔断策略</strong>：在满足熔断条件时，阻断后续请求。</li><li><strong>降级策略</strong>：当资源被限流或熔断时，可以执行备选逻辑（如返回兜底数据）。</li></ul><hr><h2 id="单测功能" tabindex="-1"><a class="header-anchor" href="#单测功能"><span>单测功能</span></a></h2><h3 id="" tabindex="-1"><a class="header-anchor" href="#"><span></span></a></h3><h3 id="流量控制-qps限流" tabindex="-1"><a class="header-anchor" href="#流量控制-qps限流"><span>流量控制 -- QPS限流</span></a></h3><blockquote><p>定义限流规则：Threshold限定阈值，ControlBehavior流控策略设置直接拒绝</p></blockquote><h3 id="流量控制-预热模式" tabindex="-1"><a class="header-anchor" href="#流量控制-预热模式"><span>流量控制 -- 预热模式</span></a></h3><h3 id="流量控制-匀速" tabindex="-1"><a class="header-anchor" href="#流量控制-匀速"><span>流量控制 -- 匀速</span></a></h3><h3 id="熔断策略-error-count" tabindex="-1"><a class="header-anchor" href="#熔断策略-error-count"><span>熔断策略 -- error_count</span></a></h3><h3 id="熔断策略-错误率" tabindex="-1"><a class="header-anchor" href="#熔断策略-错误率"><span>熔断策略 -- 错误率</span></a></h3><h3 id="熔断策略-慢请求" tabindex="-1"><a class="header-anchor" href="#熔断策略-慢请求"><span>熔断策略 -- 慢请求</span></a></h3><hr><h2 id="项目实战" tabindex="-1"><a class="header-anchor" href="#项目实战"><span>项目实战</span></a></h2><h3 id="-1" tabindex="-1"><a class="header-anchor" href="#-1"><span></span></a></h3><h3 id="_1、初始化" tabindex="-1"><a class="header-anchor" href="#_1、初始化"><span>1、初始化</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">package</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> initialize</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">	sentinel</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> &quot;github.com/alibaba/sentinel-golang/api&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">	&quot;github.com/alibaba/sentinel-golang/core/flow&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">	&quot;go.uber.org/zap&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> InitSentinel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">	err</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> :=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> sentinel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">InitDefault</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> err</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> !=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> nil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">		zap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">S</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Fatalf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;初始化sentinel 异常: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">err</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	//配置限流规则</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	//这种配置应该从nacos中读取</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">	_</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">err</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> =</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> flow</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">LoadRules</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">([]</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">flow</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Rule</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">		{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">			Resource</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:               </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;goods_list&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">			TokenCalculateStrategy</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">flow</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Direct</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">			ControlBehavior</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:        </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">flow</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Reject</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">//匀速通过</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">			//Threshold:              20,          //100ms只能就已经来了1W的并发， 1s就是10W的并发</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">			//StatIntervalInMs:       6000,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">			Threshold</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:        </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">3</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// 6秒钟只能3个请求进来，方便测试</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">			StatIntervalInMs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">6000</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">		},</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	})</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> err</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> !=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> nil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">		zap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">S</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Fatalf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;加载规则失败: </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%v</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">err</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_2、main函数初始化" tabindex="-1"><a class="header-anchor" href="#_2、main函数初始化"><span>2、main函数初始化</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">package</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">import</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">	&quot;fmt&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">	&quot;go.uber.org/zap&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">	&quot;kuangstudy-mall/apis/goods-web/global&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">	&quot;kuangstudy-mall/apis/goods-web/initialize&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">	&quot;kuangstudy-mall/apis/goods-web/validation&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	// 解析命令行参数</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">	initialize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">InitArgs</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	// 日志</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">	initialize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">InitLogger</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	// 解析配置件</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">	initialize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">InitializeConfig</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	// 初始化gprc服务</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	//initialize.InitClient()</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">	initialize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">InitSentinel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	// 初始化自定义验证器</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">	validation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">InitValidator</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">global</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Locale</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	// gin 服务的封装和路由模块划分</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">	Router</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> :=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> initialize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">InitWebRouter</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">	err</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> :=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> Router</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Run</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">fmt</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Sprintf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%s</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">global</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">IP</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">global</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">	zap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">S</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Infof</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;gin服务端口是：</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">，启动了&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">global</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> err</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> !=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> nil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">		zap</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">S</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">().</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Panicf</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;gin服务端口是：</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">%d</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">，启动失败了&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">global</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Args</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Port</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_3、具体使用" tabindex="-1"><a class="header-anchor" href="#_3、具体使用"><span>3、具体使用</span></a></h3><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">// FindGoodsList 查询商品列表</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">func</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">api </span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">*</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">GoodsApi</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">FindGoodsList</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;"> *</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">gin</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">Context</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	var</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> goodsContext</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> context</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">GoodsContext</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">	err</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> :=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ShouldBindJSON</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#383A42;--shiki-dark:#C678DD;">&amp;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">goodsContext</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> err</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> !=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> nil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">		api</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">FailCodeMsgAny</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">603</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">validation</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">GetErrors</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">err</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">goodsContext</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">), </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">		return</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">	// 开始远程服务调用</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">	bannerInfoRequest</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> :=</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;"> proto</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#C18401;--shiki-dark:#E5C07B;">GoodsFilterRequest</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">{</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">		PageNo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:     </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">goodsContext</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">PageNo</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">		PageSize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:   </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">goodsContext</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">PageSize</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">		Keyword</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:    </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">goodsContext</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Keyword</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">		IsHot</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:      </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">goodsContext</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">IsHot</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">		IsNew</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:      </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">goodsContext</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">IsNew</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">		CategoryId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">goodsContext</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">CategoryId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">		MinPrice</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:   </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">goodsContext</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">MinPrice</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">		MaxPrice</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:   </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">goodsContext</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">MaxPrice</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">	entry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">blockError</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> :=</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> sentinel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Entry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;goods_list&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">sentinel</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">WithTrafficType</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">base</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">Inbound</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">))</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">	if</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;"> blockError</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;"> !=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> nil</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-light-font-style:italic;--shiki-dark:#7F848E;--shiki-dark-font-style:italic;">		// 意味着被限流了</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">		api</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">FailCodeMsgAny</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">606</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;请求过于频繁，请稍后再试!&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">		return</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">	}</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">	entry</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">Exit</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">	api</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">.</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">OK</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">bannerInfoRequest</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">ctx</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="测试" tabindex="-1"><a class="header-anchor" href="#测试"><span>测试</span></a></h3>`,80)]))}const r=i(l,[["render",h],["__file","Sentinel.html.vue"]]),d=JSON.parse('{"path":"/framework/%E5%BE%AE%E6%9C%8D%E5%8A%A1/Sentinel.html","title":"Sentinel","lang":"zh-CN","frontmatter":{"title":"Sentinel","order":5,"author":"xiaoxie","date":"2020-01-01T00:00:00.000Z","tag":["微服务"],"star":true,"description":"限流 & 降级 & 熔断 快速理解 我们一般开发的服务处理请求的能力是有限的，若是接收请求数量达到一定程度服务就会崩溃，不能处理其他的服务的请求引起雪崩效应 本节考虑的主要是解决大量请求导致服务器崩溃而引起的雪崩效应问题 核心：限流将流量请求限制在服务能力范围内 ​ 熔断降级是为了解决服务崩溃导致其他服务不可用甚至扩展效应导致服务雪崩效应 举两个例子 ...","head":[["meta",{"property":"og:url","content":"https://Cospk.github.io/vuepress-app/framework/%E5%BE%AE%E6%9C%8D%E5%8A%A1/Sentinel.html"}],["meta",{"property":"og:site_name","content":"Golang全栈指南"}],["meta",{"property":"og:title","content":"Sentinel"}],["meta",{"property":"og:description","content":"限流 & 降级 & 熔断 快速理解 我们一般开发的服务处理请求的能力是有限的，若是接收请求数量达到一定程度服务就会崩溃，不能处理其他的服务的请求引起雪崩效应 本节考虑的主要是解决大量请求导致服务器崩溃而引起的雪崩效应问题 核心：限流将流量请求限制在服务能力范围内 ​ 熔断降级是为了解决服务崩溃导致其他服务不可用甚至扩展效应导致服务雪崩效应 举两个例子 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-03-18T05:19:18.000Z"}],["meta",{"property":"article:author","content":"xiaoxie"}],["meta",{"property":"article:tag","content":"微服务"}],["meta",{"property":"article:published_time","content":"2020-01-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-03-18T05:19:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Sentinel\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-01-01T00:00:00.000Z\\",\\"dateModified\\":\\"2025-03-18T05:19:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xiaoxie\\"}]}"]]},"headers":[{"level":2,"title":"快速理解","slug":"快速理解","link":"#快速理解","children":[{"level":3,"title":"举两个例子","slug":"举两个例子","link":"#举两个例子","children":[]},{"level":3,"title":"什么是服务雪崩：","slug":"什么是服务雪崩","link":"#什么是服务雪崩","children":[]}]},{"level":2,"title":"Sentinel 的限流和熔断实现的底层原理","slug":"sentinel-的限流和熔断实现的底层原理","link":"#sentinel-的限流和熔断实现的底层原理","children":[{"level":3,"title":"1. 限流的实现原理","slug":"_1-限流的实现原理","link":"#_1-限流的实现原理","children":[]},{"level":3,"title":"2. 熔断的实现原理","slug":"_2-熔断的实现原理","link":"#_2-熔断的实现原理","children":[]},{"level":3,"title":"3. 核心模块","slug":"_3-核心模块","link":"#_3-核心模块","children":[]}]},{"level":2,"title":"单测功能","slug":"单测功能","link":"#单测功能","children":[{"level":3,"title":"","slug":"","link":"#","children":[]},{"level":3,"title":"流量控制 -- QPS限流","slug":"流量控制-qps限流","link":"#流量控制-qps限流","children":[]},{"level":3,"title":"流量控制 -- 预热模式","slug":"流量控制-预热模式","link":"#流量控制-预热模式","children":[]},{"level":3,"title":"流量控制 -- 匀速","slug":"流量控制-匀速","link":"#流量控制-匀速","children":[]},{"level":3,"title":"熔断策略 -- error_count","slug":"熔断策略-error-count","link":"#熔断策略-error-count","children":[]},{"level":3,"title":"熔断策略 -- 错误率","slug":"熔断策略-错误率","link":"#熔断策略-错误率","children":[]},{"level":3,"title":"熔断策略 -- 慢请求","slug":"熔断策略-慢请求","link":"#熔断策略-慢请求","children":[]}]},{"level":2,"title":"项目实战","slug":"项目实战","link":"#项目实战","children":[{"level":3,"title":"","slug":"-1","link":"#-1","children":[]},{"level":3,"title":"1、初始化","slug":"_1、初始化","link":"#_1、初始化","children":[]},{"level":3,"title":"2、main函数初始化","slug":"_2、main函数初始化","link":"#_2、main函数初始化","children":[]},{"level":3,"title":"3、具体使用","slug":"_3、具体使用","link":"#_3、具体使用","children":[]},{"level":3,"title":"测试","slug":"测试","link":"#测试","children":[]}]}],"git":{"createdTime":1734622519000,"updatedTime":1742275158000,"contributors":[{"name":"xiaoxie01","username":"xiaoxie01","email":"xie18115@gmail.com","commits":1,"url":"https://github.com/xiaoxie01"},{"name":"xiaoxie001","username":"xiaoxie001","email":"xie18115@outlook.com","commits":1,"url":"https://github.com/xiaoxie001"}]},"readingTime":{"minutes":9.05,"words":2716},"filePathRelative":"framework/微服务/Sentinel.md","localizedDate":"2020年1月1日","autoDesc":true,"excerpt":"\\n<h2>快速理解</h2>\\n<blockquote>\\n<p>我们一般开发的服务处理请求的能力是有限的，若是接收请求数量达到一定程度服务就会崩溃，不能处理其他的服务的请求引起雪崩效应</p>\\n<p>本节考虑的主要是解决大量请求导致服务器崩溃而引起的雪崩效应问题</p>\\n<p>核心：<strong>限流</strong>将流量请求限制在服务能力范围内</p>\\n<p>​             <strong>熔断降级</strong>是为了解决服务崩溃导致其他服务不可用甚至扩展效应导致服务雪崩效应</p>\\n</blockquote>\\n<table>\\n<thead>\\n<tr>\\n<th style=\\"text-align:center\\"></th>\\n<th style=\\"text-align:center\\"><strong>限流</strong></th>\\n<th style=\\"text-align:center\\"><strong>熔断</strong></th>\\n</tr>\\n</thead>\\n<tbody>\\n<tr>\\n<td style=\\"text-align:center\\"><strong>保护目标</strong></td>\\n<td style=\\"text-align:center\\">当前服务</td>\\n<td style=\\"text-align:center\\">当前服务与下游服务</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\"><strong>触发条件</strong></td>\\n<td style=\\"text-align:center\\">请求量过大</td>\\n<td style=\\"text-align:center\\">调用下游服务失败或响应过慢</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\"><strong>处理方式</strong></td>\\n<td style=\\"text-align:center\\">拒绝部分请求</td>\\n<td style=\\"text-align:center\\">停止调用下游服务</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\"><strong>恢复机制</strong></td>\\n<td style=\\"text-align:center\\">持续控制流量</td>\\n<td style=\\"text-align:center\\">半开状态检测下游服务恢复后恢复调用</td>\\n</tr>\\n<tr>\\n<td style=\\"text-align:center\\"><strong>典型场景</strong></td>\\n<td style=\\"text-align:center\\">短时间内流量暴增（如秒杀活动）</td>\\n<td style=\\"text-align:center\\">下游服务不可用或性能下降（如故障或拥堵）</td>\\n</tr>\\n</tbody>\\n</table>"}');export{r as comp,d as data};
