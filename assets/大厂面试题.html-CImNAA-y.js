import{_ as l}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as e,d as s,o as a}from"./app-D1ISDG-V.js";const n={};function t(h,i){return a(),e("div",null,i[0]||(i[0]=[s(`<h2 id="腾讯一面" tabindex="-1"><a class="header-anchor" href="#腾讯一面"><span>腾讯一面</span></a></h2><ol><li>协程池的作用?</li><li>内存逃逸分析?</li><li>go的内存回收什么条件会触发? go的GC能够手动触发吗?</li><li>channel的底层实现? 有缓冲的,无缓冲的channel, 如果管道已经关闭了, 读取会不会发生错误?</li><li>切片使用的时候需要注意什么?</li><li>go中的参数传递是值传递还是引用传递?</li><li>defer的执行顺序?</li><li>100G的文件, 统计出所有英文字母, 按照字母表顺序输出</li><li>linux如何分割文件?</li><li>接口性能如何优化?</li><li>什么情况会全表扫描?</li><li>主丛同步的原理? mysql还有什么相关的log文件?</li><li>分布式锁的原理?</li></ol><h2 id="腾讯二面" tabindex="-1"><a class="header-anchor" href="#腾讯二面"><span>腾讯二面</span></a></h2><p><strong>项目拷打15分钟</strong></p><ol><li>Kafka的消息丢失和消息重复消费。</li><li>Kafka和Rabbitmq的区别在哪？（架构、推和拉）</li><li>拉的模式有什么好处（控制消费速度）</li><li>使用分布式锁的过程中应用挂了？</li><li>优雅启停+defer</li><li>使用过期时间+自动续期</li><li>对象存储和文件存储的主要区别是什么？</li><li>分片上传是怎么实现的（文件合并hash一致性校验，引出文件秒传）</li><li>邮箱验证码功能怎么实现的。（redis+邮箱组件）</li><li>jwt的格式。加密算法、内容、过期时间</li><li>讲一下defer的原理</li><li>讲一下map的底层结构</li><li>map中hash冲突怎么解决（链表、红黑树）</li><li>讲一下go性能调优的案例（pprof，线程日志）</li><li>通过线程日志延伸出，怎么看一个线程在线程日志里是卡在循环还是事件等待？</li><li>线程日志上面会有标记。</li><li>讲一下mysql的事务隔离级别？</li><li>解释一下什么是可重复读？</li><li>事务实现的底层原理？</li><li>Redis持久化机制（RDB，AOF）</li><li>为什么持久化的时候是fork子进程处理</li><li>讲一下docker实现容器的基本原理</li><li>用过其他容器运行时吗</li><li>K8s有哪些组件？</li></ol><h2 id="腾讯一面-校招" tabindex="-1"><a class="header-anchor" href="#腾讯一面-校招"><span>腾讯一面（校招）</span></a></h2><ol><li>map怎么去做并发安全</li><li>外层的协程能捕获子协程的panic吗？</li><li>panic都会被捕获吗？哪些panic不会捕获？</li><li>slice和数组的区别？底层结构？</li><li>go哪些内置类型是并发安全的？</li><li>go的结构体可以嵌套组合吗？</li><li>两个结构体可以等值比较吗？</li><li>你如何理解interface类型</li><li>1.18版本后interface有什么增强？</li><li>interface可以进行等值比较吗？</li><li>说说逃逸分析</li><li>channel有缓冲和无缓冲的区别</li><li>map并发访问会怎么样?这个异常可以捕获吗？</li><li>GMP模型</li><li>GMP模型中什么时候把G放全局队列？</li><li>go的gc</li><li>gc扫描是并发的吗？</li><li>gc中的根对象是什么？</li><li>项目中etcd用来干什么的？</li><li>mysql索引B＋T</li><li>索引的优缺点</li><li>redis用来做什么的?</li><li>用户信息怎么存的？都走缓存吗？</li><li>redis过期淘汰策略</li></ol><h2 id="腾讯二面-校招" tabindex="-1"><a class="header-anchor" href="#腾讯二面-校招"><span>腾讯二面（校招）</span></a></h2><ol><li>会什么语言？</li><li>tcp和udp的本质区别</li><li>tcp可靠通信怎么实现的</li><li>说一说拥塞控制</li><li>滑动窗口的作用</li><li>什么是粘包，怎么解决</li><li>堆和栈有什么区别</li><li>进程的进程空间是怎么样的？</li><li>进程，线程，协程的区别</li><li>链表额线性表的区别</li><li>有序双向链表如何高效查询？</li><li>kafka如何实现高吞吐的？</li><li>介绍最近的项目</li><li>缓存击穿，雪崩，穿透</li></ol><h2 id="腾讯三面-校招" tabindex="-1"><a class="header-anchor" href="#腾讯三面-校招"><span>腾讯三面（校招）</span></a></h2><ol><li>项目中比较有挑战性的事？</li><li>什么是伪随机？</li><li>c＋＋里面的继承和虚函数，抽象封装，和go的interface有什么区别？</li><li>为什么go不是传统意义上的面向对象语言？</li><li>c＋＋多重继承可能导致循环继承，go用interface实现有这种问题吗？</li><li>单例模式？什么情况用饿汉模式，什么时候用懒汉模式？</li><li>表的主键用什么类型的字段？用字符串不可以吗？</li><li>消息队列是什么?</li><li>有了解过其他消息队列吗？</li><li>kafka你们是怎么部署的呢？</li><li>能说一说你们怎么使用devops的吗？</li><li>不用kafka可以吗？</li><li>ES是干什么的？</li><li>前后端通信用的什么协议？</li><li>grpc相比http的优势在什么地方呢？</li></ol><h2 id="腾讯qq一面" tabindex="-1"><a class="header-anchor" href="#腾讯qq一面"><span>腾讯QQ一面</span></a></h2><ol><li>自我介绍</li><li>算法：20有效括号，240搜索二维矩阵Ⅱ</li><li>项目在运行了吗？数据表的设计？简单画一下</li><li>数据库外键关联不同表吗？</li><li>抢单的设计是怎么做的？</li><li>Redis里缓存了所有悬赏的订单？</li><li>怎样防止多人抢单？没有很理解递减是怎么实现的</li><li>悬赏下单的用户？</li><li>为什么有订单数量的概念？</li><li>如果Redis抢单成功但是后面的逻辑失败怎么办？即发消息队列的失败了会怎么样？会出现什么问题？</li><li>上述问题有没有什么解决办法？</li><li>直接用Mysql实现多人抢单可以吗？</li><li>使用Mysql的话有没有不通过数量控制的方案？</li><li>上个问题相对更优雅的解决方案，如根据订单状态</li><li>QPS提升3倍，为什么只提升了3倍？所有服务搭载在个人机上，提升比较小，这样测试是不合理的</li><li>点赞是怎么设计的？点赞的底层逻辑怎么存的？</li><li>评论怎么设计的？</li><li>评论可以折叠吗？只有一个层级？</li><li>如果你考虑针对评论进行回复的话，他可能的数据表结构是怎样的？</li><li>设计完成以后怎么查这些不同层级的评论？</li><li>所以其实实现不同层级的评论只需要一个表就行了，只不过子评论要记录其对应的主评论的id</li><li>Go了解的多不多？</li><li>Java的集合大概讲一讲</li><li>ArrayList的底层怎么实现，数据结构怎么样，扩容策略是怎样的</li><li>HashMap的底层实现呢，Hash冲突怎么处理的？扩容策略？加载因子多大？为什么是0.75</li><li>Java的垃圾收集机制</li><li>新生代老年代是怎么划分的？</li><li>网络相关的HTTP了解的不多吗？Get和Post的区别？</li><li>登录请求的话用什么请求？用Get会有什么问题</li><li>从浏览器输入个网址到显示页面的过程</li><li>TCP和UDP的区别？</li><li>操作系统相关的了解吗？</li><li>Redis常用的数据结构有哪些？如果要实现一个排行榜，用什么数据结构？</li><li>如果实现分布式锁呢？什么命令？setnx</li><li>Redis实现简易的布隆过滤器是怎么实现的？</li><li>Redis常见的穿透击穿雪崩问题？</li><li>击穿的解决方案</li><li>逻辑过期的话怎么更新呢？逻辑过期的时间点有很多请求过来，是不是都会去数据库请求更新数据？</li><li>Redis的过期淘汰策略</li><li>Redis过期数据的删除策略？</li><li>Mysql的索引通常是怎么划分的？从数据结构上可以划分为哪些索引？是指这些索引数据结构不一样，比如InnoDB的？MyISAM的？哈希的？</li><li>聚簇索引和非聚簇索引的区别？</li><li>数据和索引放一起的优点</li><li>什么是回表？</li><li>Mysql事务的隔离级别</li><li>未提交读有什么问题？</li><li>什么是不可重复读？什么是幻读？</li><li>反问</li></ol><h2 id="腾讯qq二面-电话面" tabindex="-1"><a class="header-anchor" href="#腾讯qq二面-电话面"><span>腾讯QQ二面（电话面）</span></a></h2><ol><li>自我介绍</li><li>Golang协程与线程的区别</li><li>专业问题</li><li>中间漏了几个问题</li><li>Redis缓存击穿解决方案在项目中是否用过，用在什么地方</li><li>检查到key过期了，都请求数据库不就击穿了吗</li><li>怎么加锁</li><li>这个锁放在本地吗？内存里面吗？</li><li>MySQL支持的最大并发数</li><li>Redis支持的最大并发数</li><li>算法：文件里面有20亿个整数，找到前1000个最大的，要求时间复杂度尽可能低</li><li>上述算法时间复杂度多少</li><li>项目背景</li><li>Jmter压测的哪个接口</li><li>QPS</li><li>具体是怎么优化的呢</li><li>压测后qps提升了3倍，瓶颈在哪个地方，为什么不能再多了</li><li>阿里云用的是Cos服务是吧</li><li>订单超卖是什么意思</li><li>项目大概多少人参与</li><li>这个服务有几个系统</li><li>这个项目是用来给自己学校的吗？还是各个学校通用的项目？</li><li>这个项目打通了学校里面的账号体系了吗？</li><li>反问</li></ol><h2 id="腾讯云智" tabindex="-1"><a class="header-anchor" href="#腾讯云智"><span>腾讯云智</span></a></h2><h3 id="一面" tabindex="-1"><a class="header-anchor" href="#一面"><span>一面</span></a></h3><ol><li>自我介绍</li><li>第一个项目是实习项目吗</li><li>你在里面负责的部分</li><li>用户悬赏下单的业务流程讲一下</li><li>RabbitMQ写库失败了会怎么处理</li><li>Redis的数据与数据库里的数据是怎么保持一致的</li><li>什么时候写库什么时候写Redis，数据库中有库存吗</li><li>Redis是在哪部署的</li><li>Redis用的哪种数据类型，项目中Redis哪些地方用了</li><li>SpringCache依赖Redis，那用的是什么数据类型</li><li>登录注册是怎么实现的</li><li>什么是JWT</li><li>鉴权是怎么做的</li><li>退出登录是怎么实现的</li><li>简易短视频都负责什么？登录注册是怎么实现的</li><li>TCP的三次握手和四次挥手的过程</li><li>Time wait的作用是什么</li><li>断开连接是客户端发起还是服务端发起？服务端可以断开吗？</li><li>HTTP和HTTPS的区别</li><li>HTTPS是怎么加密的了解吗</li><li>Session，Cookie，token的区别</li><li>Session是在哪存的</li><li>进程线程协程这三个的区别</li><li>CPU调度是哪个</li><li>数据库事务的隔离级别</li><li>什么是幻读</li><li>MySQL主键索引和普通索引的区别</li><li>怎么避免回表操作</li><li>索引失效的场景</li><li>B树和B+树的区别</li><li>如何实现一个HashMap（HashMap的底层结构以及一些扩容操作）</li><li>HashMap和ConcurrentHashMap的区别</li><li>深拷贝和浅拷贝的区别</li><li>说一说使用逻辑过期解决缓存击穿问题</li><li>key逻辑过期后，与数据库的一致性怎么保证</li><li>缓存穿透问题及解决方案</li><li>ThreadLocal实现线程信息隔离说一下</li><li>用户登录以后，再请求其他接口，这时是同一个线程吗？</li><li>不把用户id放到threadlocal可以吗？</li><li>算法题</li></ol><h3 id="二面" tabindex="-1"><a class="header-anchor" href="#二面"><span>二面</span></a></h3><ol><li>自我介绍</li><li>挑一个项目聊一下</li><li>第一版方案为什么会超卖呢</li><li>Redis中的库存还没有递减完成，出现了比如OOM的情况，数据库怎么获得已经抢成功的数据？</li><li>数据库和缓存数据一致性的问题</li><li>如果数据库更新完成了，但是删除缓存时没有成功，这时会怎么办</li><li>项目有实际需求吗？还是找的课题</li><li>RabbitMQ在项目里是干嘛用的？</li><li>抢单的人怎么知道要查哪个key呢？</li><li>具体压测的数据</li><li>简易短视频是怎样的项目</li><li>反问</li></ol><h2 id="腾讯" tabindex="-1"><a class="header-anchor" href="#腾讯"><span>腾讯</span></a></h2><h3 id="某不知名组一面-电话面" tabindex="-1"><a class="header-anchor" href="#某不知名组一面-电话面"><span>某不知名组一面（电话面）</span></a></h3><ol><li>简单的自我介绍</li><li>Java判断相等使用==和使用equals的区别</li><li>Java里面接口和抽象类的区别，属性、方法、继承限制等方面回答</li><li>详细介绍下项目用户注册和登录的流程</li><li>密码存到数据库中是用的哪种方式进行的加密</li><li>不加盐的问题</li><li>登录成功以后返回的什么数据</li><li>返回的token是怎么生成的</li><li>token里面包含了什么信息</li><li>客户端和后台通信走什么协议</li><li>对于HTTP协议有多少了解</li><li>Redis提供了哪些基础的数据类型</li><li>这些数据类型底层是基于什么数据结构实现的</li><li>使用Redis做性能优化具体是怎么做的</li><li>对Linux操作系统熟悉吗</li><li>项目后台不是部署在Linux上的吗</li><li>反问</li></ol><h3 id="二面-1" tabindex="-1"><a class="header-anchor" href="#二面-1"><span>二面</span></a></h3><ol><li>自我介绍</li><li>对面介绍自己的组，问可以接受Go语言吗？</li><li>算法：53最大子数组和，239滑动窗口最大值，136只出现一次的数字</li><li>进程和线程是怎么理解的？</li><li>协程是什么意思？这三者对比一下</li><li>在设计程序的时候如何抉择呢？比如应该用多进程的方式还是单进程多线程的方式？</li><li>线程池中的核心参数</li><li>线程池的执行流程</li><li>开发过程中用过线程池吗？线程池的这几个参数是如何确定的？</li><li>为什么是n+1和2n和？</li><li>你的项目你认为是CPU密集型还是IO密集型</li><li>项目v2要上线了，项目v1中还有任务在线程池中，这个时候要怎么办呢？【回答的shutdown和shutdownNow的区别，使用shutdown，等待任务队列里的任务执行完再关闭v1版本的项目】</li><li>线程的超时时间设置</li><li>你的项目的请求上限是多少？上限多少是右哪些因素决定的？</li><li>springBoot可以调吗，让他的上限多一些</li><li>Java中的反射解决的问题？使用的场景？</li><li>C/C++不支持反射，了解过为什么有些语言持支反射有些不支持反射吗？有什么编程语言的特性决定了他可以用反射吗？</li><li>Java中如何判断一个对象可以被回收了？</li><li>判断对象是不是被引用标记了，扫一遍的时间可能会非常长，如何来优化它或者现有的机制是如何做的？</li><li>如何入手MySQL的优化？看Explain的什么内容？</li><li>索引的底层数据结构是什么样子？</li><li>B+树为什么比较合适？为什么不用二叉树？红黑树？B树？</li><li>MySQL里开启了两个事务，第一个事务插入一条记录并返回了id，此时这个事务还没有提交，第二个事务可以查询到id为2的记录吗？什么隔离级别可以查到，什么隔离级别查不到？</li><li>Redis是单线程的为什么比较快？【内存，多线程切换，IO多路复用，Redis的数据结构】</li><li>怎么理解IO多路复用？相对于什么IO多路复用性能更高</li><li>git的合并的命令？git merge 和 git rebase 用过吗？</li><li>假设一个场景：我合入了一个版本，其他同学在之后也合入了三四个版本，这个时候发现我合入的版本有bug，需要把这个撤回，要怎么做呢？</li><li>反问</li></ol><h2 id="腾讯音乐" tabindex="-1"><a class="header-anchor" href="#腾讯音乐"><span>腾讯音乐</span></a></h2><h3 id="一-开场" tabindex="-1"><a class="header-anchor" href="#一-开场"><span>（一）开场</span></a></h3><ol><li>面试官介绍岗位</li></ol><ul><li>岗位为腾讯音乐 - 全民K歌 - 国际版 - 直播歌房后台研发工程师，主要负责直播相关功能，开发语言为Go和C++。</li></ul><ol><li>关于求职者基本情况</li></ol><ul><li>要求5分钟以内的自我介绍。</li><li>被问到所在公司技术团队裁撤后为何会留下自己。</li><li>岗位base深圳能否接受。</li></ul><h3 id="二-项目相关" tabindex="-1"><a class="header-anchor" href="#二-项目相关"><span>（二）项目相关</span></a></h3><ol><li>系统重构 - 数据迁移项目</li></ol><ul><li>微服务相关</li><li>如何理解微服务，为什么微服务能提升系统可拓展性。</li><li>微服务相比于单体服务的缺点。</li><li>服务间通信成本指的是什么，成本体现在哪。</li><li>数据库迁移原因与成本评估</li><li>把数据库从MongoDB迁移到MySQL的原因。</li><li>如何评估迁移异构数据库（MongoDB到MySQL）的成本，是否仅考虑成熟度和被接受程度，因为迁移涉及数据同步工作量巨大。</li><li>技术选型相关</li><li>如果采用最终一致性方案，MySQL支持事务而MongoDB不支持事务，有什么原因不使用最终一致性方案。</li><li>数据同步与异常处理</li><li>迁移过程中数据同步怎么做（新数据库写MySQL，写脚本迁移Mongo数据到MySQL）。</li><li>业务要读写新旧数据时怎么办。</li><li>迁移比较暴力，如何发现数据异常，异构数据库迁移时如何保证每条数据正常迁移到MySQL。</li><li>唯一键场景下（Mongo已有数据，切换到MySQL写时可能重复写入）的处理。</li></ul><ol><li>优化服务器项目</li></ol><ul><li>分布式缓存实现</li><li>优化服务器引入分布式缓存技术（具体是Redis），如何实现的。</li><li>缓存与数据库一致性</li><li>如何保证Redis缓存和数据库的数据一致性（回答缓存先写数据库后写存在问题）。</li><li>写缓存成功数据库失败时缓存是否为脏数据。</li><li>先写数据库成功再写Redis，缓存更新失败怎么办，如何知道何时将数据库数据同步到缓存及同步的做法。</li><li>缓存是否有过期时间机制，有没有不过期一直生效的情况，有过期的话多久过期。</li><li>缓存同时过期会有什么问题以及如何解决。</li></ul><ol><li>数据抓取业务项目</li></ol><ul><li>Kafka相关</li><li>Kafka在业务中的角色。</li><li>业务为什么要经过Kafka这一层，账号量有多大。</li><li>定时任务可分散执行时间，Kafka在这种情况下削峰意义不大，是否有其他考虑使用Kafka的因素。</li><li>防止账号丢失已有确认机制，当作下游处理失败重新触发即可，为何还需要Kafka。</li></ul><ol><li>抖音微信小游戏归因业务项目</li></ol><ul><li>Token缓存相关</li><li>微信小游戏的token存于sync.map（服务内存），为何使用服务内存而不使用Redis或其他外部缓存方案。</li><li>用户量相关，当有一定数量实例和用户量时这种方案是否有缺陷（此处存在理解偏差导致回答失误）。</li></ul><h3 id="三-go和mysql" tabindex="-1"><a class="header-anchor" href="#三-go和mysql"><span>（三）Go和MySQL</span></a></h3><ol><li>MySQL中索引如何实现，为什么MySQL里不使用B树。</li><li>切片如何实现</li><li>Go里并发读写map会出现问题，如何解决</li><li>Go里的sort排序如何实现</li><li>协程和线程的区别，线程开销大的原因，协程有上下文切换为何线程消耗更多CPU资源</li></ol><h3 id="四-算法与反问" tabindex="-1"><a class="header-anchor" href="#四-算法与反问"><span>（四）算法与反问</span></a></h3><ol><li>算法手撕</li><li>反问</li></ol><h2 id="腾讯互娱-一面-go" tabindex="-1"><a class="header-anchor" href="#腾讯互娱-一面-go"><span>腾讯互娱 一面/Go</span></a></h2><ul><li>Go的接口作用，用处，实现</li><li>空struct用途，会不会分配内存</li><li>Go原生支持默认参数或可选参数吗，如何实现</li><li>Go defer执行顺序</li><li>协程，协程间信息如何同步</li><li>Go GMP</li><li>性能开销大原因 <ul><li>GM</li><li>GMP</li><li>go生成一个协程，此时放在P中还是M中</li><li>G阻塞，M、P如何</li></ul></li><li>操作系统中大端编码、小端编码</li><li>TCP、UDP</li><li><ul><li>三次握手、四次挥手</li><li>为什么挥手是四次，会不会合并</li><li>流量控制</li></ul></li><li>Redis项目中使用（主数据库还是缓存）</li><li>Redis与MySQL数据如何同步</li><li>MySQL索引建立原则</li><li>Explain，字段</li><li>Redis持久化方式</li><li>Redis过期删除策略</li><li>Redis高可用设计</li><li><ul><li>主从复制方式，模式</li></ul></li><li>kafka业务使用</li><li>Redis常用数据结构</li><li><ul><li>zset使用场景，具体实现</li></ul></li><li>部署方式，k8s部署（相关概念）</li><li>Go性能优化方式</li><li><ul><li>请求耗时过长，有无使用到链路观测</li></ul></li><li>单链表判断有没有环</li><li>玩家积分排序topN实现算法</li><li>项目中遇到的困难较高的场景</li><li>微服务r如何理解，有何问题</li><li><ul><li>服务端崩溃检测</li></ul></li></ul><h2 id="腾讯外包-后端开发-一面" tabindex="-1"><a class="header-anchor" href="#腾讯外包-后端开发-一面"><span>腾讯外包 /后端开发/一面</span></a></h2><ul><li><ol><li>自我介绍</li><li>go开发几年（1年半）</li><li>熟悉到什么程度（增删改查不是问题）</li><li>map是否安全（不安全）</li><li>为什么不安全</li><li>slice的底层结构</li><li>apendslice会安全吗</li><li>automatic有用过（用过+1-1）</li><li>说一下什么是原子性（要么成功要么失败）</li><li>怎么做有一个有序的排序（结构里搞个切片，然后用sort排序）</li><li>mysql主从同步机制（不会）</li><li>redis常用数据结构（string、list、hash、set、zset、bitmap）</li><li>有序列表的底层结构（不会，跳表）</li><li>常用的索引数据结构（哈希、b+树、二叉树）</li><li>微服务的服务发现（客户端服务、服务端服务）</li><li>怎么感知服务集群的变化（服务注册中心、轮询服务健康、监控系统）</li><li>注册中心如何感知服务的变化(心跳推送？触发机制之类的）</li><li>会不会k8s（不会）</li></ol></li></ul><h2 id="字节跳动" tabindex="-1"><a class="header-anchor" href="#字节跳动"><span>字节跳动</span></a></h2><ol><li>介绍一下业务表的字段</li><li>定时任务刷新字段, 是怎么实现的?</li><li>分布式锁? 分布式死锁如何解决? 看门狗机制? 如何避免当前线程加的锁, 被其它线程解锁?</li><li>乐观锁和悲观锁的区别? 写多读少的情况, 应该使用乐观锁还是悲观锁?</li><li>分布式场景下, 如何实现乐观锁?</li><li>kafka的幂等性? 如何避免消息被重复消费?</li><li>两个线程, 同时向mysql中插入一条数据?</li><li>kafka如何保证消息不丢失</li><li>sql优化场景:</li></ol><div class="language-pgsql line-numbers-mode" data-highlighter="shiki" data-ext="pgsql" data-title="pgsql" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>select id,name,balance from account where update_time &gt; &#39;2020-09-19&#39; limit 100000, 10</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>该语句为什么查询慢? 有什么优化思路?</p><ol><li>算法题: 子集</li></ol><h2 id="字节一面-技术" tabindex="-1"><a class="header-anchor" href="#字节一面-技术"><span>字节一面（技术）</span></a></h2><ol><li>make和new的区别？</li><li>mutex锁有几种模式？</li><li>讲一下GMP调度模型</li><li>两道语法纠错题（牛客上可以多刷一下）并解释为什么</li><li>一道算法爬楼梯</li><li>一道编程题：有100个并发线程，需要控制最多只有10个执行（有缓冲channel实现）并解释思路</li><li>知道哪些设计者模式？</li></ol><h2 id="字节二面-技术-人事" tabindex="-1"><a class="header-anchor" href="#字节二面-技术-人事"><span>字节二面（技术+人事）</span></a></h2><p><strong>技术：</strong></p><ol><li>讲一下一个系统访问的整个链路过程</li><li>K8s有哪些组件？</li><li>怎么把node里的pod暴露给外面使用？</li><li>我对监控的理解，怎么判断一个系统是否已经挂调了？</li><li>如果让你对系统进行一个巡检，你会怎么做？</li><li>举例数据库巡检</li><li>用过云产品吗？讲一下你对公有云的理解</li><li>用过OPEN AI吗？你一般怎么使用？</li></ol><p><strong>人事：</strong></p><ol><li>从技术上和工作上上一家公司对你有什么成长？</li><li>在工作中和技术上学到哪些技能？举例说明</li><li>离职原因，未来职业规划</li></ol><h2 id="字节" tabindex="-1"><a class="header-anchor" href="#字节"><span>字节</span></a></h2><ol><li>自我介绍</li><li>选择一个项目或者需求详细介绍一下</li><li>代码题，输出什么内容</li></ol><div class="language-stylus line-numbers-mode" data-highlighter="shiki" data-ext="stylus" data-title="stylus" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">package </span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">main</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">import (</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;encoding/json&quot;</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">    &quot;fmt&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">func </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">main</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    jsonStr</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> := \`{</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;id&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">321789788912372911233</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;name&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;John&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;age&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">30</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">,</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;city&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;New York&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}\`</span></span>
<span class="line"><span style="--shiki-light:#0184BC;--shiki-dark:#56B6C2;">    var</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> person map[string]interface{}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    json</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.Unmarshal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">([]</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">byte</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(jsonStr)</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">, &amp;</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">person</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    person[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;married&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] = </span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">true</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    person[</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;children&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">] = []string{</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Tom&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">, </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">&quot;Jerry&quot;</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    fmt</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.Println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(person)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    jsonB</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">,</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">_ := json</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.Marshal</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(person)</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    fmt</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;">.Println</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">string</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(jsonB))</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol><li>tcp 拥塞控制算法</li><li>mvcc 底层实现原理</li><li>在有些实际生产中会将默认隔离级别调整至读提交，为什么，有什么好处</li><li>mysql 怎么实现乐观锁和悲观锁</li><li>一条 sql 语句，匹配到了一条语句，会加什么锁，锁表还是锁行</li><li>es 里面是怎么实现分页的，分页有哪几种方式</li><li>算法题 力扣 42 接雨水</li></ol><h2 id="美团-一面" tabindex="-1"><a class="header-anchor" href="#美团-一面"><span>美团 一面</span></a></h2><ol><li>自我介绍</li><li>leetcode141 环形链表，判断是否有环路</li><li>延申leetcode142 环形链表2，找到入口位置</li><li>判断一个sql（左右模糊查询）能否命中索引</li><li>为什么左右模糊不能命中索引</li><li>如何优化这个sql（左右模糊查询）</li><li>全文索引底层怎么实现的</li><li>建立分词后，如何进行快速的模糊检索</li><li>分词用的什么数据结构</li><li>跳表的时间复杂度，哈希表呢</li><li>哈希表有什么问题</li><li>说一下MySQL的索引</li><li>什么是聚簇索引、非聚簇索引</li><li>事务隔离级别</li><li>InnoDB如何实现可重复读</li><li>死锁是什么，如何解决死锁</li><li>拷打项目</li><li>你觉得科研中什么能力比较重要</li></ol><h2 id="美团-二面" tabindex="-1"><a class="header-anchor" href="#美团-二面"><span>美团 二面</span></a></h2><ol><li>自我介绍</li><li>拷打项目</li><li>socket、TCP/IP 的关系</li><li>输入 url 的到浏览器显示网页的过程</li><li>反问</li></ol><h2 id="美团" tabindex="-1"><a class="header-anchor" href="#美团"><span>美团</span></a></h2><ol><li>Go中Map的数据结构?扩容机制?key为什么是无序的?</li><li>简述-下rune类型</li><li>什么是协程泄露?</li><li>select 底层数据结构和一些特性?</li><li>对已经关闭的的chan进行读写，会怎么样?为什么?</li><li>除了加Mutex锁以外还有哪些方式安全读写共享变量?</li><li>互斥锁正常模式和饥饿模式的区别 ?</li><li>原子操作和锁的区别 ?</li><li>一条select语句的执行流程?</li><li>CHAR 和 VARCHAR的区别?</li><li>MYISAM和INNODB的不同?</li><li>binlog的工作模式有哪些?</li><li>持久化机制?各自的优缺点?</li><li>怎么理解Redis事务?</li></ol><h2 id="美团-1" tabindex="-1"><a class="header-anchor" href="#美团-1"><span>美团</span></a></h2><ol><li>自我介绍</li><li>项目做完了吗？背景是什么？项目初期的背景调研是怎么做的？现在这个系统做到哪一步了？</li><li>用户下单用户派送的优劣了解过吗？怎么管理？</li><li>项目里面遇到的最大的难题是什么？为什么？</li><li>为什么使用乐观锁？你了解乐观锁的使用场景和实现逻辑吗？</li><li>乐观锁怎么实现的你了解吗？</li><li>了解悲观锁吗？</li><li>最开始有没有考虑乐观锁的适用场景和悲观锁的适用场景？</li><li>乐观锁会不会导致频繁的冲突啊？这种情况下和悲观锁谁的性能更好一些呢？</li><li>关于 Redis 的递减特性你了解哪些？</li><li>关于 Redis 的指令还用到过其他哪些呢？</li><li>setnx 的原理你知道吗？</li><li>有个场景你了解吗：锁获取后程序退出了，这样锁永远不会释放，导致死锁</li><li>看你简历里说比较了解集合，对集合的了解简单说一下</li><li>怎样判断内存是否需要回收？（对象死亡的判断方法？）</li><li>可达性分析是如何对对象进行标记的？三色标记法了解吗？</li><li>垃圾回收的过程（针对某一个具体的垃圾收集器 CMS 或 G1）</li><li>清除的过程呢？</li><li>标记清除算法的优点和缺点？</li><li>CMS 标记阶段比较长，如果产生了过多的浮动垃圾，有可能会出现回收赶不上分配的情况，从而导致 GC 失败，这种要怎么解决？</li><li>CMS 和 G1 的比对了解吗？为什么废除了 CMS？</li><li>G1 怎么做到指定具体的垃圾清除时间的？</li><li>线程的生命周期你了解吗？</li><li>每个状态之间怎么流转的你了解吗？</li></ol><h2 id="饿了么" tabindex="-1"><a class="header-anchor" href="#饿了么"><span>饿了么</span></a></h2><h3 id="一面-1" tabindex="-1"><a class="header-anchor" href="#一面-1"><span>一面</span></a></h3><ol><li>自我介绍</li><li>Java面向对象的三个特性，什么是多态</li><li>双亲委派机制</li><li>HashMap在JDK1.7以前有线程不安全，怎么个情况</li><li>保证线程安全用什么Map</li><li>ConcurrentHashMap是怎样的</li><li>线程池用过吗？核心参数以及有啥作用</li><li>使用线程池有什么好处</li><li>悲观锁和乐观锁是怎么样子的</li><li>Java中怎么实现悲观锁和乐观锁</li><li>HTTP和HTTPS的区别，加密过程是怎样的</li><li>TCP的粘包是怎样的现象</li><li>Cookie和session的区别</li><li>用户登录之后怎么找到对应的Session的呢</li><li>两个项目哪个有挑战一点，挑一个讲一讲</li><li>平时做项目或科研会遇到什么困难，遇到困难一般自己解决吗</li><li>最近有了解一些新的技术或者看一些技术书籍之类的吗</li><li>算法题：反转链表</li><li>其他的offer</li><li>之后有往上海发展的打算吗</li><li>反问</li></ol><h2 id="阿里巴巴" tabindex="-1"><a class="header-anchor" href="#阿里巴巴"><span>阿里巴巴</span></a></h2><h3 id="数字零售技术部-erp技术一面-电话面" tabindex="-1"><a class="header-anchor" href="#数字零售技术部-erp技术一面-电话面"><span>数字零售技术部-ERP技术一面（电话面）</span></a></h3><ol><li>自我介绍</li><li>项目背景？</li><li>你觉得项目难点是哪些？</li><li>第一版是怎么实现的？为什么会出现超卖问题？</li><li>记录抢单结果的表是怎么设计的？</li><li>这张表的索引和其他的约束是怎么做的？</li><li>乐观锁为什么不是加在抢单关系表而是在订单表里的？</li><li>你现在数据库的设计上似乎有些问题</li><li>你们的订单允许取消吗？</li><li>如果要取消的话应该怎么设计呢？</li><li>简易短视频做了哪些东西</li><li>用户登录的处理流程是怎么个样子</li><li>接收登录请求是HTTP吗</li><li>HTTP里面登录的状态保持是怎么做的？</li><li>怎么判断JWT的合法性</li><li>JWT里面保持了哪些东西？数据结构大概是什么样子？</li><li>JWT和普通的Session的方式有什么区别？</li><li>session的方式了解过吗？</li><li>使用JWT要实现一个状态只能一个设备登录，这应该怎么做呢？</li><li>怎么设置JWT的校验不通过呢？</li><li>JWT对于登录数量有要求的就很痛苦</li><li>Java的双亲委派，为什么要这么设计呢？</li><li>类如果重复加载会有什么问题呢？</li><li>有遇到过非双亲委派模型的场景吗？</li><li>类加载的过程一般会做哪些事情？每一步具体都在做些什么呢？</li><li>对JVM的调优有了解过吗？</li><li>说说你对Redis的了解</li><li>bitmap是个什么样的东西</li><li>项目里的Redis是怎么用的？</li><li>抢单为什么会有库存数量</li><li>使用Redis防止超卖的流程是怎样的，会不会有并发的问题？</li><li>递减是怎么操作的？</li><li>这样会不会有问题，递减完成时的并发判断库存大小的时候出问题，因为递减和判断不是原子性的</li><li>ThreadLocal的作用</li><li>什么样的情况下会使用ThreadLocal？</li><li>后面怎么使用的？</li><li>这么设计（使用ThreadLocal）的原因？目前来说ThreadLocal是能不用就不用的</li><li>内部起个线程池，这时能拿到ThreadLocal的内容吗？</li><li>SpringCache和Redis有什么区别？（考虑业务上的合理性）</li><li>MySQL有哪些储存引擎了解吗？有什么区别</li><li>聚簇索引和非聚簇索引有什么区别？</li><li>回表的优化了解过吗？</li><li>为什么不要使用select * 呢？</li><li>没有被索引覆盖是什么？</li><li>什么是索引下推</li><li>反问</li></ol><h3 id="二面-电话面" tabindex="-1"><a class="header-anchor" href="#二面-电话面"><span>二面（电话面）</span></a></h3><ol><li>自我介绍</li><li>这里面比较有挑战的是哪个系统</li><li>在Redis里怎么做库存的扣减</li><li>怎么保证是不超卖的呢</li><li>面试官举了个例子表示对Redis递减防止超卖的不理解</li><li>HashMap底层是什么数据结构组成的</li><li>红黑树有什么好处</li><li>28个元素放到HashMap里面，那么HashMap初始化的容量为多少比较好</li><li>初始化了一个固定线程数的线程池，线程数是5个，把6个任务扔进去，线程池怎么处理</li><li>MySQL有个表，里面四个字段有abc三个字段，d是主键，我要查询ab，条件是bc，这时怎么设计索引</li><li>什么是回表</li><li>假设还是这个表，数据量很大，这时要做分页，每页100条，你怎么设计这个查询语句</li><li>子查询怎么设计</li><li>比如要查第10000页，你会怎么写这个sql</li><li>用过limit查询吗</li><li>项目里Redis防止超卖的方案，Redis就类似一个锁了</li><li>解释缓存穿透和缓存雪崩</li><li>上述情况的解决方案</li><li>刷新视频时系统会推荐20条用户没看过的视频，这时怎么设计会让性能更优呢</li></ol><blockquote><p>考虑位图或者布隆过滤器，使用二进制数组来保存视频，实现筛选没看过的视频</p></blockquote><ol><li>笔试题：输出每个url最多的访问次数（类似华子实习笔试第一题，但是简单一些）</li><li>反问</li></ol><h2 id="阿里" tabindex="-1"><a class="header-anchor" href="#阿里"><span>阿里</span></a></h2><ol><li>分别介绍一下MySOL、ES、Mongo数据库各自的特点以及适合的使用场景是什么?</li><li>倒排索引了解吗?</li><li>ES的分页功能有什么特性?</li><li>ES的分词检索?</li><li>Kafka与Zookeeper是什么关系?</li><li>多个同样的消息被发送到Kafka如何控制他们只消费一个?</li><li>什么是Kafka的羊群效应 ?</li><li>Redis相比Memcached有哪些优势?</li><li>阐述缓存穿透?怎么解决?</li><li>什么是bigkey?会有什么影响?</li></ol><h2 id="阿里外包-一面" tabindex="-1"><a class="header-anchor" href="#阿里外包-一面"><span>阿里外包/一面</span></a></h2><ol><li>自我介绍</li><li>遇到过高并发？（网站大访问量用redis缓存，表单做提交）</li><li>进程、线程、协程（随便说说）</li><li>go的协程设置原理（说了gmp模型）</li><li>go的锁,用到什么锁（mutex、rwmutex）</li><li>锁怎么实现的，有没有看过源码（莫得）</li><li>innodb和myisam区别（事务支持、查询速度、表文件结构、外键支持、innodb有主键，查询效率高）</li><li>为什么查询效率高（叶子节点存储索引和数据，避免回表二次查询）</li><li>mysql优化（说了分表和覆盖索引）</li><li>explain关注的字段（命中索引、可能命中索引、全表扫描、用到覆盖索引）</li><li>redis和kafka的区别（说了redis和kafka的特点）</li><li>用过k8s吗（没）</li><li>mysql的版本控制（说了mvcc，以及怎么实现的）</li><li>前期用php?(公司转型）</li><li>php和go哪个好用（说了go协程用起来方便，php的麻烦一点，编译型语言，安全比php明文安全）</li><li>goroutine+channel依次输出小猫小狗100次（设置猫狗channel，先读猫channel输出，狗输出的时候先读猫channel来保证顺序，没说好这一块）</li><li>map怎么用？线程安全？怎么扩容？（不是安全的，用sync.map安全，说了双倍扩容）</li><li>怎么解决他的哈希冲突？（重新扩容、哈希函数重新生成）</li><li>设计模式（说了单例模式、策略模式）</li><li>php用什么框架（tp、laravel）</li><li>laravel的依赖注入</li></ol><h2 id="蚂蚁" tabindex="-1"><a class="header-anchor" href="#蚂蚁"><span>蚂蚁</span></a></h2><h3 id="工具开发一面-电话面" tabindex="-1"><a class="header-anchor" href="#工具开发一面-电话面"><span>工具开发一面（电话面）</span></a></h3><ol><li>自我介绍</li><li>项目背景</li><li>JMeter做了压测，压测是怎么设计的</li><li>500压测线程的设置和服务器以及JVM的规格和设置有什么关系吗</li><li>优化了50%，那么优化点主要体现在哪里呢</li><li>RabbitMQ在写DB时如果出现了异常，导致了数据不一致，有什么补偿的机制吗</li><li>在线程池中线程复用的情况下，ThreadLocal会不会有什么问题</li><li>代码里面会是什么时机做ThreadLocal的remove呢</li><li>在使用AOP的时候，对于接口会有一些规范的要求吗？比如方法签名中的参数会不会有一些规范？</li><li>如果要依赖一些参数做做一些权限的控制的话，对于参数的规范会有一些怎样的考虑</li><li>具体讲一下使用逻辑过期方案解决Redis的缓存击穿问题</li><li>这个跟Redis里面看门狗的机制有什么区别吗</li><li>如果内存不够大了会选择使用什么方案来解决呢（逻辑过期不让缓存过期）</li><li>如果是要开一个线程来同步数据库从而解决逻辑过期的话，新开的线程与其他读取缓存的线程之间的协作关系怎么处理呢</li><li>JDK的类库里面有没有了解到可以做线程之间协作关系的</li><li>除了synchronized还有其他更加灵活的方案吗？</li><li>怎么理解乐观锁和悲观锁的</li><li>怎么考量用乐观锁还是悲观锁的？</li><li>项目中有没有遇到JVM相关的问题，比如内存溢出等问题</li><li>万一有OOM或者线程卡住了，我们排查的手段和步骤是怎么样的？</li><li>在设置JVM参数的时候，考虑机器有4G的内存，那我设置会有什么样的原则吗</li><li>对自己职业的预期，更偏向算法还是更偏向工程</li><li>互联网+的比赛做的是什么？控制平衡还是视觉识别</li><li>对于具象智能有什么想法吗</li><li>算法题：使用多线程统计一个文件中不同的词出现的次数，记不清了</li><li>反问</li></ol><h3 id="工具开发二面-电话面" tabindex="-1"><a class="header-anchor" href="#工具开发二面-电话面"><span>工具开发二面（电话面）</span></a></h3><ol><li>自我介绍</li><li>这三个项目的时间顺序</li><li>项目背景</li><li>Java的list有哪些以及他们的区别和原理</li><li>HashMap和HashTable的区别</li><li>一个类在JVM的生命周期，按照这个说一下类的加载过程</li><li>验证这个阶段会加载到JVM的内存结构的哪个部分去</li><li>用过命令去打过jar包吗</li><li>介绍双亲委派机制</li><li>有自己写一个类加载器吗</li><li>知道可以拓展类加载器吗</li><li>说一下对于AOP和IOC的理解</li><li>AOP的实际的应用有哪些</li><li>SpringBoot你常用的注解有哪些</li><li>有了解过注解的原理吗？注解的本质是什么</li><li>Spring里面有很多SDK，你常用的有哪些？比如MyBatis</li><li>这块原理有了解过吗</li><li>这里有没有对哪一块比较熟悉并且研究过原理的</li><li>设计模式有了解过吗</li><li>数据库索引的原理了解吗</li><li>讲一下你对b+树的理解</li><li>项目中有遇到过一些慢sql的情况吗</li><li>除了explain还有其他定位慢sql的方式吗</li><li>一般是什么原因会导致慢sql</li><li>介绍项目中Redis是怎么用的</li><li>Redis是单线程还是多线程的</li><li>Redis的持久化有了解过吗</li><li>有没有了解过Redis的集群</li><li>数据库这块除了MySQL有没有了解过Mongo</li><li>Redis里面的事务原理有了解过吗</li><li>Redis的缓存穿透、雪崩怎么解决</li><li>shell这一块有了解吗</li><li>大模型这块有了解过相关的技术或者产品吗</li><li>transform有了解过吗</li><li>你觉得你过去做的最有挑战的事是什么</li><li>你觉得你成就感最大的事情是什么</li><li>自己的性格有测过吗MBTI</li><li>对base地有要求吗</li><li>手头有其他offer吗？对蚂蚁这边的意向怎样</li><li>反问</li></ol><h3 id="工具开发三面" tabindex="-1"><a class="header-anchor" href="#工具开发三面"><span>工具开发三面</span></a></h3><ol><li>自我介绍</li><li>论文的层次，参加的比赛，专利</li><li>介绍实验室的科研项目</li><li>已经拿到的offer，base选择</li><li>为什么不继续科研方向</li><li>参加过开源项目吗？github有账号吗</li><li>为什么没有参加实习</li><li>项目的收获</li><li>项目收获比较大的地方</li><li>反问</li></ol><h2 id="百度" tabindex="-1"><a class="header-anchor" href="#百度"><span>百度</span></a></h2><p>1.GMP模型?</p><p>2.协程创建后如何调度?</p><blockquote><p>先进入p的私有队列, 如果满了, 进入全局队列</p></blockquote><p>3.context的结构和用法</p><p>4.一次url的请求过程?</p><p>5.请求到达项目服务器后的调用链路</p><p>6.nginx是否为单例的.</p><p>7.算法: 两数相除</p><p>8.平时mysql优化的案例?</p><p><a href="http://9.in" target="_blank" rel="noopener noreferrer">9.in</a>, exist的使用</p><p>10.联合索引</p><p>11.binlog日志</p><p>12.分布式事务: 下游两个db使用redis, 需要更新这两个不同的db, 如何自己实现最终一致性</p><p>13.两阶段提交, 三阶段提交?</p><h2 id="百度后端研发工程师" tabindex="-1"><a class="header-anchor" href="#百度后端研发工程师"><span>百度后端研发工程师</span></a></h2><ol><li>自我介绍</li><li>操作系统处理死锁的方法</li><li>操作系统内存管理的方法</li><li>Redis持久化</li><li>Memcache知道吗</li><li>使用shell统计文件中top3的ip地址</li><li>磁盘满了写不进去，排查命令</li><li>找出文件夹中最大的几个文件，命令是什么</li><li>说-下ES和Redis的区别</li><li>编程题<br> //Go两个goroutine交替打印1-10<br> //G1 1<br> //G2 2<br> //G1 3<br> //G2 4<br> //..<br> //G1 9<br> //G2 10</li></ol><h2 id="京东-golang" tabindex="-1"><a class="header-anchor" href="#京东-golang"><span>京东 golang</span></a></h2><h3 id="一面-60min" tabindex="-1"><a class="header-anchor" href="#一面-60min"><span>一面 60min</span></a></h3><ul><li>讲一下项目</li><li>go语言的掌握程度</li><li>数据结构</li><li><ul><li>空间利用率提高，但是发生冲突的可能性也增大了</li><li>go语言的map</li><li>拉链法的优缺点</li><li>拉链法如何优化</li><li>负载因子调到1会有什么后果</li></ul></li></ul><p>数据库</p><ul><li><p>数据库索引有哪些</p></li><li><p>ql建表</p><div class="language-undefined line-numbers-mode" data-highlighter="shiki" data-ext="undefined" data-title="undefined" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span>设计一张字生表：表需求是可以记录学生姓名、出生日明、手机 号、是否在读。邮箱。家庭地址、生表现评价 常见查询条件为姓名、出生日期、手机号、是否在读</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>这个表有什么缺陷</p></li><li><p>新加一个学号字段要考虑什么</p></li><li><p>数据库四大特性</p></li><li><p>innodb默认隔离级别</p></li><li><p>rr是怎么实现的</p></li></ul><p>网络</p><ul><li>tcp三次握手</li><li>ip位于哪层？icmp位于哪层？ping命令位于哪层？</li><li>telnet是什么操作？位于哪层？</li><li>https加密过程 (这个我不太清楚 如果有大佬知道 麻烦评论区指点一下)</li></ul><h3 id="二面-35mn" tabindex="-1"><a class="header-anchor" href="#二面-35mn"><span>二面 35mn</span></a></h3><ul><li>二面面试官：&quot;看你简历感觉你对go的接触程度不是特别深 你需要在接下来的过程中说服我&quot;</li><li>对哪些语言比较熟悉</li><li>为什么很多大厂都用go</li><li>说一说对slice的认识</li><li>slice如何做深拷贝</li></ul><p>数据库</p><ul><li>如何避免回表</li><li>标识性差的字段一定不能做索引列吗？</li><li>标识性差的字段为什么不能用来做索引列？</li><li>b和b+树的区别</li><li>mysql默认隔离级别</li><li>rr如何解决不可重复读</li></ul><h2 id="京东" tabindex="-1"><a class="header-anchor" href="#京东"><span>京东</span></a></h2><h3 id="一面-2" tabindex="-1"><a class="header-anchor" href="#一面-2"><span>一面</span></a></h3><ol><li>算法题：leetcode16.最接近的三数之和，leetcode234.回文链表，leetcode72.编辑距离</li><li>自我介绍</li><li>前面两个项目是自己发起的还是什么契机去做这个项目的</li><li>ThreadLocal怎样保证其线程安全</li><li>怎样保证多线程来使用他？？</li><li>如果主线程中有信息，其他线程怎么获取主线程中的信息</li><li>项目中Redis哪些地方用到了</li><li>Redis的哪些操作有原子性</li><li>除了递减指令还有哪些指令具有原子性呢</li><li>两个项目里面你觉得那部分是有技术难点的</li><li>超卖问题还有什么别的解决方案呢</li><li>如果是两个应用都要写数据库，加锁怎么解决超卖问题呢</li><li>聊一聊乐观锁和悲观锁</li><li>两种锁各自的应用场景</li><li>ArrayList和LinkedList说一说吧</li><li>String类可以被继承吗？为什么？</li><li>JVM的组成部分</li><li>说一说使用的垃圾回收器</li><li>G1垃圾回收期和CMS的改进或者说不一样的地方</li><li>G1的分区，有哪些区（堆的分区）</li><li>G1的清除算法</li><li>什么情况下会产生full GC</li><li>原空间是用来做什么的？</li><li>TCP的四次挥手是怎么样的</li><li>为什么要等待</li><li>有没有主动去了解过一些新的技术？</li><li>从大学到现在做的最有成就感的事情</li><li>第三个项目是主导地位？可以安排别人的工作</li><li>你觉得你的优势是什么</li><li>学习成绩怎么样</li><li>反问</li></ol><h3 id="二面-2" tabindex="-1"><a class="header-anchor" href="#二面-2"><span>二面</span></a></h3><ol><li>自我介绍，介绍一个项目</li><li>这两个项目是自己开发的还是给公司做的</li><li>哪个项目是自己承担的更多</li><li>超卖问题是怎么发现的，解决思路，怎么找到的方案</li><li>网上的成熟方案你觉得有没有更好的方案或者现有的方案有没有什么问题</li><li>Redis失效后怎么保证与数据库中数据的一致性</li><li>Redis持久化可以解决这种突发的情况吗？这个没有调研过吗</li><li>一般去哪里找这些解决方案，不同地方有什么倾向性吗</li><li>做的这两个项目里面比较大的收获是什么</li><li>这个项目后面会继续做吗</li><li>自己对未来一两年的规划是怎样的</li><li>行业或者技术方向会有考虑吗</li><li>为什么是Java和Go呢</li><li>当前行业的语言都了解过哪些</li><li>你觉得自己的最大的优势是什么</li><li>反问</li></ol><h2 id="京东一面-30min" tabindex="-1"><a class="header-anchor" href="#京东一面-30min"><span>京东一面 （30min ）</span></a></h2><h3 id="微服务中间件开发部门" tabindex="-1"><a class="header-anchor" href="#微服务中间件开发部门"><span>微服务中间件开发部门</span></a></h3><ol><li>自我介绍</li><li>实习项目中确保结果准确性</li><li>实习项目上游数据有问题怎么办</li><li>Golang new 和make的区别</li><li>为什么多协程优化，不使用协程呢？</li><li>实习项目过程中还有什么可以优化的地方</li><li>微服务的优势，为什么用微服务</li><li>怎么确保线程安全</li><li>信号量和锁的区别</li><li>你有什么问题吗？</li></ol><h2 id="pdd-一面-java" tabindex="-1"><a class="header-anchor" href="#pdd-一面-java"><span>PDD 一面/Java</span></a></h2><ul><li>MySQL</li><li><ul><li>提交了怎么样的事务有可能导致死锁</li><li>怎样用？什么情况使用</li><li>数据同步怎么实现</li><li>使用null作为条件查询问题</li><li>最左前缀原则</li><li>索引下推、索引覆盖</li><li>join原理实现</li><li>索引设计讲究/原则</li><li>聚簇索引</li><li>InnoDB为什么建议用自增整数作为主键</li><li>MySQL内存磁盘同步机制</li><li>数据页在内存中是完整的数据吗？</li><li>分库分表</li><li>MySQL主从架构</li><li>MySQL什么时候会死锁</li><li>表中有业务主键、逻辑删除标志，逻辑删除后又插入同样的一条记录，平衡业务主键和逻辑删除的问题</li></ul></li><li>项目工程</li><li><ul><li>业务背景</li><li>系统QPS</li><li>项目中算法如何使用</li><li>项目中的架构设计有何问题</li><li>业务修改后 MySQL、Redis数据如何更新</li><li>如何进行数据持久化</li><li>哪一部分占比较高</li><li>如何重新设计MySQL、Redis架构</li><li>设计模式（工程上使用）</li><li>单体应用多层异常处理原则（异常管理原则）</li><li>Redis、MySQL配合使用，如何确保数据一致性</li><li>项目介绍</li><li>系统故障问题、如何解决</li><li>服务器部署情况</li><li>代码迭代过程中防止代码腐化</li><li>关注的业务指标</li></ul></li></ul><h2 id="pdd服务端开发" tabindex="-1"><a class="header-anchor" href="#pdd服务端开发"><span>PDD服务端开发</span></a></h2><ol><li>自我介绍</li><li>项目的各种细节</li><li>服务发现一般可以怎么做!</li><li>InnoDB 引擎的特性</li><li>MySQL 数据库支持高并发的读写，设计上有哪些可以用的方案?</li><li>了解哪些缓存淘汰策略?</li><li>go 的 defer 机制</li><li>go 的 map 是有序还是无序?为什么?</li><li>GET、POST 区别</li><li>HTTP 是无状态的，如何做到有状态?(cookie session)</li><li>HTTPS 过程</li><li>算法题:</li></ol><ul><li>LRU</li><li>LeetCode 62 不同路径</li></ul><h2 id="酷狗音乐" tabindex="-1"><a class="header-anchor" href="#酷狗音乐"><span>酷狗音乐</span></a></h2><h3 id="一面-3" tabindex="-1"><a class="header-anchor" href="#一面-3"><span>一面</span></a></h3><ol><li>mysql存储引擎?</li><li>mysql隔离级别? 分别解决了什么问题?</li><li>2pc, 3pc 算法</li><li>10亿个数据获取前100个最大数据?</li><li>单个表到达多大要进行拆分? 为什么需要拆表?</li><li>redis哪些使用场景?</li><li>服务的熔断降级?</li><li>平时如何提升和学习?</li><li>TCP和UDP可以绑定同一个端口吗?</li><li>linux如何查看cpu, 内存负载?</li><li>进程间通信有哪些方式?</li><li>redis的数据类型?</li><li>redis和mysql的一致性问题?</li></ol><h3 id="二面-3" tabindex="-1"><a class="header-anchor" href="#二面-3"><span>二面</span></a></h3><ol><li>项目中涉及到哪些监控? prometheus</li><li>队列出现消息积压, 如何处理?</li><li>消息幂等性?</li><li>一个sql语句, 已经建立了索引, 但是突然查询很慢, 如何排查?</li><li>索引失效场景?</li><li>mysql如何解决的幻读?</li></ol><blockquote><p>select ... for update: 保证当前事务中查询的范围加锁, 不被其它事务修改</p></blockquote><ol><li>做索引优化, 如何减少回表次数--索引下推</li></ol><blockquote><p>索引下推: 指将上层(服务层)负责的事情, 交给下层(引擎层)处理.</p><p>不使用索引下推: 根据索引中的主键值, 定位并读取完整的行记录, 然后将记录交给server层去检测该记录是否满足where条件</p><p>使用索引下推: 获取索引, 判断索引是否符合条件范围, 如果满足, 再进行对应的回表查询获取主键, 如果不满足, 直接过滤掉</p></blockquote><ol><li>分布式事务, 二阶段提交, 三阶段提交的区别?</li><li>linux查看网络io的命令? netstat</li><li>如果出现大量time-wait状态, 如何处理?</li><li>网络的拥塞控制?</li></ol><h2 id="b站外包-go开发-一面" tabindex="-1"><a class="header-anchor" href="#b站外包-go开发-一面"><span>b站外包/go开发/一面</span></a></h2><ol><li>自我介绍</li><li>在百度什么级别？t几？（没有技术级别，当时忘记自己是什么级别了，说了个m，然后他说m是经理hhh）</li><li>怎么设计一个api的（没答好，已读乱回）</li><li>怎么去防那个ddos（redis限流+nginx层做处理，最后还是花钱买服务）</li><li>怎么部署那个安全拦截服务的（领导买了，在控制台做的服务，点点点）</li><li>cdn的理解（加快访问速度之类的，问我还有没有别的，我说没有）</li><li>负载均衡怎么做的（领导在控制台点点点）</li><li>说项目没难度（我说是，不像b站外包用到这么多技术）</li><li>分表是怎么分的</li></ol><h2 id="b站外包" tabindex="-1"><a class="header-anchor" href="#b站外包"><span>b站外包</span></a></h2><ol><li>旋转数组</li><li>mysql索引相关。</li></ol><ul><li>B+树有什么特点？</li><li>为什么不用B树（查询的速度差不多，因为b+树数据都在叶子节点）。</li><li>非聚簇索引和聚簇索引的区别。</li><li>索引为什么要用id不用字符</li></ul><ol><li>Linux相关命令和场景</li><li>docker和k8s</li></ol><h2 id="_360-一面" tabindex="-1"><a class="header-anchor" href="#_360-一面"><span>360 一面</span></a></h2><ol><li>协程池的作用?</li><li>内存逃逸分析?</li><li>go的内存回收什么条件会触发? go的GC能够手动触发吗?</li><li>channel的底层实现? 有缓冲的,无缓冲的channel, 如果管道已经关闭了, 读取会不会发生错误?</li><li>切片使用的时候需要注意什么?</li><li>go中的参数传递是值传递还是引用传递?</li><li>defer的执行顺序?</li><li>100G的文件, 统计出所有英文字母, 按照字母表顺序输出</li><li>linux如何分割文件?</li><li>接口性能如何优化?</li><li>什么情况会全表扫描?</li><li>主丛同步的原理? mysql还有什么相关的log文件?</li><li>分布式锁的原理?</li></ol><h2 id="_360-二面" tabindex="-1"><a class="header-anchor" href="#_360-二面"><span>360 二面</span></a></h2><ol><li>自我介绍</li><li>实现LRU算法</li><li>这个lru算法用在生产环境会出现什么问题</li><li>如果十万个线程同时put，会出现什么问题</li><li>如何控制并发，加什么锁，读写锁还是互斥锁</li><li>进程、线程、协程</li><li>程序从加载到运行的过程</li><li>为什么线程消耗比协程大，具体体现在哪些方面</li><li>生产中哪些服务用的 进程、线程，为什么要这么做，有什么好处（今天第二次问到）</li><li>nginx master-worker进程、进程与redis 进程、线程</li><li>数据库事务，隔离级别</li><li>各个隔离级别怎么实现的，原理</li><li>RR能解决幻读吗，为什么</li><li>MVCC</li><li>数据库中的锁</li><li>乐观锁、悲观锁适用于什么情况，并发，读多写少</li><li>分布式锁</li><li>zookeeper、mysql、redis 、etcd 怎么实现分布式锁，各有什么优缺点，生产中一般用那个</li><li>zookeeper原理，怎么保持高可用</li><li>tcp三次握手、四次挥手</li><li>timewait、closewait出现，怎么处理</li><li>tcp调优相关参数</li><li>拥塞控制算法、滑动窗口、零窗口报文</li><li>http1.0 - http3.0 改进，优缺点</li></ol><h2 id="_360-三面" tabindex="-1"><a class="header-anchor" href="#_360-三面"><span>360 三面</span></a></h2><ol><li>说说 Linux 常用操作，ps 是干嘛的</li><li>Go map 为什么是无序的？</li><li>MySQL 索引分类，索引的优点和缺点</li><li>分库分表</li><li>Cookie 和 Session 的区别和应用，分布式 Session 的实现</li><li>TCP三次握手/四次挥手</li><li>Redis 的数据类型及其数据结构，Bitmap 是什么</li><li>Redis 的雪崩效应 ，是什么，怎么解决</li><li>线程，进程，协程区别</li><li>算法：用 Go 手撕快速排序</li></ol><h2 id="好未来" tabindex="-1"><a class="header-anchor" href="#好未来"><span>好未来</span></a></h2><ol><li>为什么要自己实现大顶堆? 大顶堆和小顶堆的使用场景?</li><li>如何利用堆, 获取第k大的元素? 堆如何删除某一个特定的节点? 大顶堆如何转换为一个小顶堆?</li><li>引入mq, 实现异步提速, 如何理解?</li><li>协程池使用的是第三方包吗? 如果自己实现一个协程池, 描述你的思路?</li><li>recover能捕获到其它协程的panic吗?</li><li>说一下对grpc的理解? grpc互相调用, 如何实现互相的权限验证和授权?</li><li>http2.0 的tsl三次握手过程?</li><li>grpc中, 如果客户端需要向服务端发送大文件, 如何实现? (使用客户端流模式)</li><li>http2.0的相关特性? 其中的多路复用为了解决什么问题? (解决对头阻塞问题)</li><li>grpc中的deadLine和timeout, 应该怎么用? grpc的流控是如何处理的? 滑动窗口控制发送和接收速速率?</li><li>go-zero中的服务熔断和限流是怎么做的?</li><li>以下两个代码片段输出的结果:</li></ol><div class="language-go line-numbers-mode" data-highlighter="shiki" data-ext="go" data-title="go" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">()  </span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    result</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> :=</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    defer</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> func</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">        result</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">++</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">  </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">func</span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;"> test</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() (</span><span style="--shiki-light:#383A42;--shiki-light-font-style:inherit;--shiki-dark:#E06C75;--shiki-dark-font-style:italic;">result</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> int</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    result</span><span style="--shiki-light:#383A42;--shiki-dark:#E5C07B;"> =</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 1</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> </span></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    defer</span><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;"> func</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">() {</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">         result</span><span style="--shiki-light:#383A42;--shiki-dark:#56B6C2;">++</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">    return</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 0</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">}</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li></li></ul><h2 id="深信服" tabindex="-1"><a class="header-anchor" href="#深信服"><span>深信服</span></a></h2><ol><li>slice原理 底层数据机构</li><li>map 原理 底层数据结构 _ a.扩容机制<br> b.并发会导致什么问题？为什么？<br> c. Map的key是有顺序的？为什么？<br> d. 能否实现map key的序</li><li>Go垃圾回收，算法 三色标记是哪三色，分别代表什么？</li><li>堆和栈区别？内存何时分配在栈上？何时分配在堆上？</li><li>如何保证缓存一致性？</li><li>redis 有哪些数据结构？常见用途</li><li>虚拟机和docker区别<br> Docker 底层原理 通过什么实现</li><li>二叉树前序中序后序遍历怎么回事？</li><li>写代码实现两个协程交替打印100以内数字</li><li>Mysql如何优化慢查询</li><li>Shell命令考察<br> a.如何判断一台服务器还是活的<br> B. 给一个文本文件 取出其中特定的列数据 然后排序</li><li>kafka如何保证消息不丢失</li><li>udp报文头部有哪些字段？</li></ol><h2 id="北京贝壳外包" tabindex="-1"><a class="header-anchor" href="#北京贝壳外包"><span>北京贝壳外包</span></a></h2><ol><li><p>自我介绍</p></li><li><p>项目拷打</p></li><li><p>Redis 跟 MySQL 以及 Kafka 之间是什么关系?</p></li><li><p>Kafka partion的概念</p></li><li><p>Kafka 偏移量</p></li><li><p>比如说有你在线上发现一条慢SQL，你怎么分析它?</p></li><li><p>索引的最左前缀原则是什么意思?a&gt;1and b=1andc=1,你看这个能命中这个索引吗?</p></li><li><p>Redis 常见的数据结构?他们的应用场景?</p></li><li><p>zset 你一般在什么场景下会用?底层的数据结构是什么?</p></li><li><p>JWT 是什么东西?</p></li><li><p>协程了解吗?和线程对比</p></li><li><p>一道算法题</p><div class="language-undefined line-numbers-mode" data-highlighter="shiki" data-ext="undefined" data-title="undefined" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span> 找到具有最大和的连续子数组，并返回该子数组</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li><li><p>编程颖</p><div class="language-undefined line-numbers-mode" data-highlighter="shiki" data-ext="undefined" data-title="undefined" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span> 用两个协程，两个channel分别接收1，2，并打印</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div></li></ol><h2 id="网易外包-go后端开发" tabindex="-1"><a class="header-anchor" href="#网易外包-go后端开发"><span>网易外包/Go后端开发</span></a></h2><h3 id="一面-4" tabindex="-1"><a class="header-anchor" href="#一面-4"><span>一面</span></a></h3><ol><li>自我介绍</li><li>mysql查询慢是什么原因（没索引、表数据量大、死锁）</li><li>mysql插入慢什么原因（表数据量大，sql语句多，表索引量大）</li><li>抽奖逻辑是怎么样的</li><li>怎么实现用户登录</li><li>用户登录安全有了解过吗（乱说一通）</li><li>redis击穿</li><li>redis穿透</li><li>redis其他数据结构有用过吗？hmap、zet</li><li>短信发送失败怎么处理的（记录发送状态+重试机制）</li></ol><h3 id="二面-4" tabindex="-1"><a class="header-anchor" href="#二面-4"><span>二面</span></a></h3><ol><li>自我介绍</li><li>cms系统0-1开发的？（开源框架二次开发）</li><li>做了哪些功能（栏目、文章、配置、模型管理之类的）</li><li>登录的过程说一下</li><li>session登录有什么弊端，怎么改（多台服务器拿不到session，用redis做缓存）</li><li>客户端拿着token，你是怎么通过token获取客户的信息（校验token，获取token作为key的信息）</li><li>有没有难一点的功能，说一下（没有，单体项目量不大，只是业务复杂度的难，技术上的难点没有）</li><li>用户信息怎么做加密，token怎么生成之类的（md5+拼接指定的key或者之类的）</li><li>200个券码，发送客户，怎么设计？（分布式锁，数据库唯一索引兜底）</li><li>还可以怎么优化（redis布隆过滤器，避免大量重复请求，处理逻辑做幂等方案）【睡不着想起来还可以做mysql的乐观锁，数据做缓存预热，减轻数据库请求压力】</li><li>长连接做成短连接，怎么设计，怎么做到短连接唯一（说了和自己的 短信生成方法（用户id活动id，二进制），php的uuid，时间戳，uuid截取？引用第三方库之类的）</li><li>面试官说要短的，要唯一的，答不出来</li></ol><h2 id="面经详解跳转链接" tabindex="-1"><a class="header-anchor" href="#面经详解跳转链接"><span>面经详解跳转链接</span></a></h2><p><a href="https://link.segmentfault.com/?enc=m40zIos8oLZX3f%2Bq0l9NaA%3D%3D.u4mDsDE4CTUOUxAKS94TQ5XAqBe8F20slXVp705XwsY7gz7HyckFdnDnMy5bELKntaYsBBO1H2W3raHdevMixl7s8l7VtTWQehOWvWYCX8YZ4XK6UikWl1Y1HsBtEQVl2AxrhR%2F5Nx1DUGGZX02AxfsdtWFPOAWu7Xf72Vl%2BSjWXLrsklir1HQkQhnV4a7%2BqE4TytI8fZsDPDlPzdRJerQb9Sk%2BcYnytBHZobIwzejsGdi7%2BsjMCvhDaoqq6vAbokeQ79pKSyi0xH19ZgBDgy4YB6LnA%2BcUZNmD503eQkfcprGuRzhz4a8WelnOEb%2F8o" target="_blank" rel="noopener noreferrer">腾讯校招面经详解</a></p><p><a href="https://link.segmentfault.com/?enc=8jrz71ri32jZ00BrXZEGrg%3D%3D.nc9rDqU%2BKKLgoaarp3yYJfFlJ2oFMOcmkNDEqOaqSRKDkiZbQlmHwcbveDMAcdUai08oJ9hPNU5v5uo21YDb%2BX9GXUdtAZtwUF1yY0vlriyAMSb47nCOfbPnsHUjMSou8VmawtC%2FkUGG1y%2BLKH0yfJb6dwiVbeR7hxilDVzD2O1dgwy8NWf5keqrO2U3wNvJLN%2Fx%2BezKAeEceoftm5RHiR2xBHjWkOZJMsiKOe%2F%2FELRqoPK1vnHT%2FCYFUPup8c%2FR6nWzlA%2FsPtkrVQCehrlJ722IUoXEzf%2FHlCUwFrHW24gN%2FDc0USnink4B0o%2B%2F6Zek" target="_blank" rel="noopener noreferrer">腾讯互娱面经详解</a></p><p><a href="https://link.segmentfault.com/?enc=yodkuUfB7SgnRF%2Flx9d9PQ%3D%3D.rvbA2ETJrUTz8rmiSy6k1y3IFb%2BLFJGff%2BjFPzTmecIpn4GQnFMEWZJvao9pPFGUp61GnXnH12lSI7wjPJ392ozza8mny5TVAKGPtqvAtcRRQHUHnkL%2BgAZpWPRnoGfsYS8xH8ktWVI2ic9B%2FbkF9Fk6bUw8EI1Bvlr3FPTQMYCrZGyIZyUSldR4pUcudYIDVMiTE%2Bx5DOkadEOFKGLcmdI4DVgNsn4xB65GBuv7%2FaFW3DIe3uYHtSQg2R474kysSKIngZnkPoz0O88Qf6qZnEFrMl8gzfg%2BEcrleZj0PNH7rPupvo8epawdjhlSM%2Bn6" target="_blank" rel="noopener noreferrer">腾讯后台秋招面经详解</a></p><p><a href="https://link.segmentfault.com/?enc=se5Dd3FsHt1vEoIXKfcuYw%3D%3D.JGSG6kkfzMe67LqDqpXuuNiKS0J%2BQTyxfdQ2QAP%2BGQ3Exx960qg7d%2Fis6Y%2FfbfDzinKk80doEXlWxi8rdSb9MZixEjdYSzOiqdq6MWkssT3LsVrywoBadWLYb4RiG3HgZN8HHe4JoRYoUZipj4RhrMp4meQvF7eYu1rDBABGAeps9yt%2ByxC8GlypUITFoQ8YmUarAZC4B9qyRVW5D1i21GepRYLSEUp4VUVpB9QRgLTmLSg5xJ0DPQlP1nJbcGj%2FNWgxk0up%2FESQbac4sudVRTkc0OGS7MGAZgVWk027ZIPtjPiopuL8EQTjo8FvCD0u" target="_blank" rel="noopener noreferrer">腾讯面经详解</a></p><p><a href="https://link.segmentfault.com/?enc=SeI%2Ft%2BRThRpiR4EkYJPNBw%3D%3D.5uQYKKSMkU9sZ5wGTc2Zd%2F7KtL4Es18jQT53wIKz%2BaUDLnTdGe7UAa1AAGRM4MM28CxNsdwXdlB0eHXq%2FQnkMn9X4DRtYVoth7abZDSHflsVwO%2BSbMRiKyeEiAyAqHKBaXSnW4s%2F1VKzl6GXPMrU%2BKhtvaMh%2FoAoGEug0EXpR5n1B9yUrLMIppw%2FCqiNOYl4xCmmaKttVyTyaK2c5jsLxydjxo9jEe6mgGVsUm1%2FwyMeDL9IkKwoaQmInJ5zNYoQn01oXju2jqxg98nxM8FVfv2VTeiITfrE%2B3QtleDEdqEPVmf%2FOHOBnWmMNwZl76nU" target="_blank" rel="noopener noreferrer">好未来面经详解</a></p><p><a href="https://link.segmentfault.com/?enc=fJzzym3aJ3SIUR9Dm0lPVg%3D%3D.ca4oKX5xDplE8SijtdL2wmP76sTPVCcko%2FMza4feOJUWtgZuOlQMcjgT3%2Bgtvl6cJZacb8fm1io0ZnuiagQZcff46vTQqaqWrKKltzCLlXo32iD%2ByoQwx5CBDOahf8%2Fax2PKanNqq4D5rfBofj28my4LmUohTfHQ3Y2Tvb4InYZY8CNysBx3XSerFc3kh8%2BvInAOlep7FDHGUYitdV%2B%2F5r4CF7DJ4ETiXAffI29TWk%2F1KdsAyzO4IzDo5A2pNEuHTdTmg%2BhkqJlA9XaHAbBOcBjaS1%2B%2BuOGGp10PnOuWsj7gUvrJ0sgJbvSh3QkChQKG" target="_blank" rel="noopener noreferrer">PDD面经详解</a></p><p><a href="https://link.segmentfault.com/?enc=UDU2TowfwVkVoe3Ua%2FEkUA%3D%3D.oE2PoIbZCD2WMWVlIdtH4bLQtfZh0PO6Ix%2B5mPnAmlCyb8dUMRj8Tfk7jL0cVdXes8eo38MMfmc1Tc4qmCkSUXZDQSdEd%2BkF1sUjLNSmctgpHXRzwDJB3mdU%2BnZEe4RUQPQjjShxtECXzymA%2FhrnEXhO6Rox9bi65XLmu5r0G%2F00r0Is0amzQi5EjXR8pm6Pnj0QLnksRYo1zLB4W4Ee9IpUX57AxB6I22fMiWdN5g9b6OR95oN1oxqdKVOvxGvq447JD4gGuY5WUkKprukjJDE7bAyw9uMwJ6%2BrXSAYl2aek2O9Z%2FudvgXpxyMNbShU" target="_blank" rel="noopener noreferrer">PDD服务端开发面经详解</a></p><p><a href="https://link.segmentfault.com/?enc=TMbiKP0BnRyIOSUIjiZxqg%3D%3D.3LwqRRhsF2eaBff8gI14t4JzwXOCZxMN2Zd6mGV46D%2BJMTeA%2B6NKC%2Fy45PJN%2F1tVCULZDgZ0GvV2YtiLakMeE4fa0Y09J1us5FIxC6ZV9dAAhBfNZ8a7%2BIt68Rk%2FiuoyIelYexAostPoyJu1YWqTNy3P9xLhuF0e6b%2FOlPcmX3Ig8CJMzwhPdwpf0y3itvFkKXMoH7Pnn5N9CHwRgnRcDaSP0f0%2Fov%2Fd1pT1eR%2BRjcoByK9VJ2ItGfxXNIjcBzOjSFgD5JFRxfEmyRoMHBczQUGrd4%2F5R%2BwzQNj1d0anUYU7UYMIkb0NvueqM%2BT8%2B0yp" target="_blank" rel="noopener noreferrer">百度面经详解</a></p><p><a href="https://link.segmentfault.com/?enc=lzDmKK7zRXV1kJhAWrcIpQ%3D%3D.%2F12bLO%2BsLeLvsxa05cPtsEWfdwfmXp7KFiMPeQ8Q9ViTkNQoXml1Ih5lCCeOSmXybt1mzU9eebvzJJlrR9RFIMHQKZ6FJ509wkzYbsSKWWRWKDPxf0zvGk2swp2yAWNVSAK2zrv6iA7pIdT5kZ35qoUJCQsHtEyOPSInPvJ%2FuSYQCWduwlNAgjZybC8GPfGHTwRB2pVbYg2T7xn4%2Fqo%2FhjFMPAsB2ILXjRXc0SAsntF77sgagEF6F9GfrRxjIiltvUJWdXLQoOvlr6KyPrcb9NoWTYTv4woFjB827B5YkiK8YC3qPXOsqQ7Xq0rJJfwb" target="_blank" rel="noopener noreferrer">百度面经详解2</a></p><p><a href="https://link.segmentfault.com/?enc=r%2BtH03YZPzMOybeQab244Q%3D%3D.QhI%2Fbuh%2F0Yhu%2FXk1YsriWFVp%2BrPUNU34Qvvrt%2B52FagJAyYXMXJi8sViT3UphX8DY5s%2BgwiGfhtGN%2BMMLviHj0uZzsy0KGaNMfB5cYhNSatXA4ZccBEzANDZRbzn8AYnQQDI89V%2BmoGvlYM8%2BGd8PWSL4dw4UPdpY7QC0NRjEQKza4wdVO9gQCw8bWIdANLBFKPTem3ib9HgmHMG0dJ0c2BHWqltiDnMqD8N7o7EZy53V8rXKM4JuE9dsxDU7j0NbCLj%2FKGZQ9imiKs4ooIY04c4bNpcBnq28WDxiv%2BrrAJKiFhVn67v%2FFg734rHHYKw" target="_blank" rel="noopener noreferrer">百度面经详解3</a></p><p><a href="https://link.segmentfault.com/?enc=cZDQ9rW88yG3Q9BjVKwh%2Fg%3D%3D.mWnEXqwxjYsZsNcodHFwJDX4jh7%2BIXdJG3GKDcs0lnHWw%2B%2FQU%2BrPwitEBawHsa5i8hStq9KaO1gePaqMzhWgjFNDXuXdICx2sqq1Q39F3cJCGPI2cXNKf4Fdrb1y6FJkPA7ukxT44368lp84GQBhPIwNd6D6xACXhiY%2B74diGoLHskxBF4YK9DSKumrsj8w6n5f%2FQW2ZzUuP%2BOp0GEyt9FFpdrX99Uei8DgJGVYnqUrSIrA1z0tl7JRn7lBJJ7ouw8DKdL%2BQLhrXIdUSr7R4Z8htX0OOejE%2FwnFl0W5kqIY7wh6MylpdGj6tMGsmESny" target="_blank" rel="noopener noreferrer">阿里校招面经详解</a></p><p><a href="https://link.segmentfault.com/?enc=hmvPwOR0qdTfcVo%2F3iBEJA%3D%3D.YTDXog%2BD9fc5UoH2lNcQBghy4uuiNKTtpis6HPZOi73Bev6NPUv%2FD2H6BsSeMvnVDZCKprA6U7eGeIPwGqcZZ%2B2NqCwIFe525gL9kr7EAiCM82ryp%2FbdP8nJ%2FKl0fqHIAhSUUHswng0NKxSVDwoDW0S78yV2ucSFKKJjGjJcAhf5xQhpeqfm%2Fb9WQ2n0Zkxrhr4d5mIyeO127q2SoYWCptBpnv7ip%2FNSH3OWcUub9ZKSu7HtVdPSxtZ3hWhqQXkwEfvULK0NfMMeb9rjkt2RgXUZC4qtEHkHO6a2W1Mq4z3HGR9vsPTeK1YLwlUeg5J5" target="_blank" rel="noopener noreferrer">阿里社招面经详解</a></p><p><a href="https://link.segmentfault.com/?enc=JizVzoULI%2Bz9XtZvSH8Esw%3D%3D.gPB%2FgB97RaQuDwceGPac2ozLE07lzXHQ7XywMs4bc25UOFEjG8Gd%2FbT%2FeaKjwkkKClctdB2nxpl%2BKYDcXoJ4xo0jNSFqTLIY8qv9Z1gDhtkGcec9AVHm0p7zmhjR0eq3z%2FjltFq1DpSh%2BAuE3yREn1kHREL2VYbShJf7UJwnEKcuettKFSFG69KjpC%2FAq%2FEwfCjw27n4fc7IHuJ98kLwwljr0Y%2BlDIFbM8G8SYmxVn0PxjyCcpWcP6qP%2FlV48QX4dQrQZaheDY7NMZKw0lCsw0h5rU8fhR6CAM1Smv8FBwRSmahlYTbQfeKhhkPfaiUR" target="_blank" rel="noopener noreferrer">贝壳外包面经详解</a></p><p><a href="https://link.segmentfault.com/?enc=23zP6sIn25AZQ3NIe25HAA%3D%3D.tEZpElZu2G6OIJdWeaZr925UgGV242AplWokHcEuJExulQ4NWAOQFVRySRU82Ynp2pgIqRA0O9SEKvoovJgbfU87SWQY6KVfDCX3TsgRXHsP6FZ%2BplqTQsNKCahdO%2BQ6V%2FxFzu%2FGheYcSRXHVzfZ7toq9t3%2FUZUY3R5GnuDyNv8VKz0qiX6F1J%2BEkjZeLhqBmYI9VmhhcpQJhFqMGbfi698Nmmg%2BC5FieuN9GFWcNjW2jc%2BQazEK7kElIXpYFGj3UFtkpal7ATRHotxIyrQhnYLH1A4s4j16G6vMXF4Yf2FNpN4ogrAORx5Uy9vipRHI" target="_blank" rel="noopener noreferrer">字节跳动面经详解</a></p><p><a href="https://link.segmentfault.com/?enc=T%2F107pU14EKJEJ1XF9uzQg%3D%3D.aSXcob3XAavDp8fwvgxDCBrt%2BcoBaShoDBX9pYRF9825rgf9ouhepAg9mP2hFMUROSqunqaSeigOstlMQpQygea2rVJNxONonL4m3N90FHR7La%2BXc0XFW%2FTLn%2B%2Fjjdxvcab3ry42wOo40RQK0HTWk01%2F%2FeclbCOfIF6plNzaW1Ux9ENdd615mTvFQSrIpDZxoZML%2FRx8qBOi3jGqGs2GgDaTPb9o1TF147FUSBilgOrMbF29qQT8aj3nzj8rp8Ge3nNyhnCCxYZwzVxVujHEQnTnQfXkk6ek6C6UVO7jWshC96nw2ocvlKrFswqy2QM8" target="_blank" rel="noopener noreferrer">字节跳动面经详解2</a></p><p><a href="https://link.segmentfault.com/?enc=yh4IrhT7yxk54zotFEoYUw%3D%3D.zgC8pLzlvjXmvN%2FDXKD8e84dgsjwbnVlNQGJkqIT7eQuQmaaWBhoizKq4WU8sQCbVL5mSqhWvoVrHwpFUtVbZ4CdYSLylsmpFCZSjiduoOupf44l3F0Xh5chvv6yWaFyEsr9Rmnd%2BpN7VdNb2um7etrM6FtZCq3xROTrk57PEEvNL2CHl15cdz1mPzaQg3xA27ux86fY4vBa9GczJVRpkVGECDvvS3DYOYDPrkXupHHrt9qQZOAi%2BEwpVmhdkFRXjky0uoYVbVah7a0XoieC8R6J5P8KrhQdY1LfP6lT9%2FzSCxm62qmdH%2BiKDBSGkmJH" target="_blank" rel="noopener noreferrer">字节跳动面经详解3</a></p><p><a href="https://link.segmentfault.com/?enc=WNx4Wql5w3nIGpcS1oQvLA%3D%3D.1HPIL7VCPFiPsVC1q5gybf%2B0XI7gbgHqz%2BMwcYVxtJULvdD31J4Yz71hNUlYoAxFkuXfJv6mVE9hvwf6Sg6evAhfYyuCVjtVo7IKyZDjjfgRx%2FyEnT5PjODtfkmG2GSm9s7%2Bo744KImfzG%2Buaf16ENzz%2FAOB69EW24OFzskpc6vH8b5m6L5TH%2BBnV6JV1qf6xyZ%2FQOuLe3yHS5hcO69FYPDJGo4k27v7bkrE1yzqYjD38X6Vc%2FXfZhQ1Urww9IyoUmp3FpmdCFZ52F04XTAqM%2FBZxbzQdaVT69NK3oWfTTUAiWUq3%2FA9LSMqp3lmygNu" target="_blank" rel="noopener noreferrer">得物面经详解</a></p><p><a href="https://link.segmentfault.com/?enc=f8ccO5aJhetp0RKazyPZZQ%3D%3D.gVwIfP5jLHvhyjWgaqa8Thu6QS43Ipa08vC8yrjgNBxyP%2FYxkGHSiKey4ugI1sNCa1ZpapMarIUiUV%2BeW4aEeulv47zb3uqFE1QU6JWUZMcol5kVND1hXWksX1PcF8qMOs%2B6MnXmtBgh9P6PEqiN5y2RjuNRC0XawTGtJFxro%2BWMOb60Vks%2F5RzTSYUqOdkxt6qas5zBTB702wT%2F3zI9epZiEavm6xrbnqgD%2Ba4Cho6CqjJZMtvgBn%2F%2FxCrXTQOve6d9Xcwm9xanMidPX1DdgBS8pQ5BKhx04xM7fD0%2FgVuDUFXRACT6zAAE6D5C7YDv" target="_blank" rel="noopener noreferrer">美团面经详解</a></p><p><a href="https://link.segmentfault.com/?enc=x2WHaz3QK3dQLh3OgVjFeQ%3D%3D.TzsziK4mgk1wWq4EsXXV%2BT7OzkHuYCNMGZUrsgrT5%2FpDMbewqPxzJocRGuNKj2Qfk0Go3G8CKf2yNVuShx5s68ZyJ%2B6Fakt%2BsEyZBTXXicwk2dN9jpp7uAouaioI3S%2FXrcbQA3IkLhE0uWsK3VBeYK5tAmby%2FlnDACOr8kBIAKd7KMomYzF90sbwJHiP1MvtNoJe09vfSYnQl9A4AOk8G7nq2tgVhjCEIJfc8hkBWQjv4D8mhZH1l2Xcgtv09%2BccQbKZ7rsenjsSR2NNsR%2BzmrBL8xYmmFTHASks5osWcG7G6O11nvUthE8aJDftmakm" target="_blank" rel="noopener noreferrer">深信服面经详解</a></p>`,188)]))}const d=l(n,[["render",t],["__file","大厂面试题.html.vue"]]),o=JSON.parse('{"path":"/golang/%E9%9D%A2%E8%AF%95/%E5%A4%A7%E5%8E%82%E9%9D%A2%E8%AF%95%E9%A2%98.html","title":"-基础面试","lang":"zh-CN","frontmatter":{"title":"-基础面试","order":1,"author":"xiaoxie","date":"2020-01-01T00:00:00.000Z","tag":["golang"],"star":true,"description":"腾讯一面 协程池的作用? 内存逃逸分析? go的内存回收什么条件会触发? go的GC能够手动触发吗? channel的底层实现? 有缓冲的,无缓冲的channel, 如果管道已经关闭了, 读取会不会发生错误? 切片使用的时候需要注意什么? go中的参数传递是值传递还是引用传递? defer的执行顺序? 100G的文件, 统计出所有英文字母, 按照字母表...","head":[["meta",{"property":"og:url","content":"https://Cospk.github.io/vuepress-app/golang/%E9%9D%A2%E8%AF%95/%E5%A4%A7%E5%8E%82%E9%9D%A2%E8%AF%95%E9%A2%98.html"}],["meta",{"property":"og:site_name","content":"Golang全栈指南"}],["meta",{"property":"og:title","content":"-基础面试"}],["meta",{"property":"og:description","content":"腾讯一面 协程池的作用? 内存逃逸分析? go的内存回收什么条件会触发? go的GC能够手动触发吗? channel的底层实现? 有缓冲的,无缓冲的channel, 如果管道已经关闭了, 读取会不会发生错误? 切片使用的时候需要注意什么? go中的参数传递是值传递还是引用传递? defer的执行顺序? 100G的文件, 统计出所有英文字母, 按照字母表..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-08T06:14:56.000Z"}],["meta",{"property":"article:author","content":"xiaoxie"}],["meta",{"property":"article:tag","content":"golang"}],["meta",{"property":"article:published_time","content":"2020-01-01T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-08T06:14:56.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"-基础面试\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2020-01-01T00:00:00.000Z\\",\\"dateModified\\":\\"2025-01-08T06:14:56.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"xiaoxie\\"}]}"]]},"headers":[{"level":2,"title":"腾讯一面","slug":"腾讯一面","link":"#腾讯一面","children":[]},{"level":2,"title":"腾讯二面","slug":"腾讯二面","link":"#腾讯二面","children":[]},{"level":2,"title":"腾讯一面（校招）","slug":"腾讯一面-校招","link":"#腾讯一面-校招","children":[]},{"level":2,"title":"腾讯二面（校招）","slug":"腾讯二面-校招","link":"#腾讯二面-校招","children":[]},{"level":2,"title":"腾讯三面（校招）","slug":"腾讯三面-校招","link":"#腾讯三面-校招","children":[]},{"level":2,"title":"腾讯QQ一面","slug":"腾讯qq一面","link":"#腾讯qq一面","children":[]},{"level":2,"title":"腾讯QQ二面（电话面）","slug":"腾讯qq二面-电话面","link":"#腾讯qq二面-电话面","children":[]},{"level":2,"title":"腾讯云智","slug":"腾讯云智","link":"#腾讯云智","children":[{"level":3,"title":"一面","slug":"一面","link":"#一面","children":[]},{"level":3,"title":"二面","slug":"二面","link":"#二面","children":[]}]},{"level":2,"title":"腾讯","slug":"腾讯","link":"#腾讯","children":[{"level":3,"title":"某不知名组一面（电话面）","slug":"某不知名组一面-电话面","link":"#某不知名组一面-电话面","children":[]},{"level":3,"title":"二面","slug":"二面-1","link":"#二面-1","children":[]}]},{"level":2,"title":"腾讯音乐","slug":"腾讯音乐","link":"#腾讯音乐","children":[{"level":3,"title":"（一）开场","slug":"一-开场","link":"#一-开场","children":[]},{"level":3,"title":"（二）项目相关","slug":"二-项目相关","link":"#二-项目相关","children":[]},{"level":3,"title":"（三）Go和MySQL","slug":"三-go和mysql","link":"#三-go和mysql","children":[]},{"level":3,"title":"（四）算法与反问","slug":"四-算法与反问","link":"#四-算法与反问","children":[]}]},{"level":2,"title":"腾讯互娱 一面/Go","slug":"腾讯互娱-一面-go","link":"#腾讯互娱-一面-go","children":[]},{"level":2,"title":"腾讯外包 /后端开发/一面","slug":"腾讯外包-后端开发-一面","link":"#腾讯外包-后端开发-一面","children":[]},{"level":2,"title":"字节跳动","slug":"字节跳动","link":"#字节跳动","children":[]},{"level":2,"title":"字节一面（技术）","slug":"字节一面-技术","link":"#字节一面-技术","children":[]},{"level":2,"title":"字节二面（技术+人事）","slug":"字节二面-技术-人事","link":"#字节二面-技术-人事","children":[]},{"level":2,"title":"字节","slug":"字节","link":"#字节","children":[]},{"level":2,"title":"美团 一面","slug":"美团-一面","link":"#美团-一面","children":[]},{"level":2,"title":"美团 二面","slug":"美团-二面","link":"#美团-二面","children":[]},{"level":2,"title":"美团","slug":"美团","link":"#美团","children":[]},{"level":2,"title":"美团","slug":"美团-1","link":"#美团-1","children":[]},{"level":2,"title":"饿了么","slug":"饿了么","link":"#饿了么","children":[{"level":3,"title":"一面","slug":"一面-1","link":"#一面-1","children":[]}]},{"level":2,"title":"阿里巴巴","slug":"阿里巴巴","link":"#阿里巴巴","children":[{"level":3,"title":"数字零售技术部-ERP技术一面（电话面）","slug":"数字零售技术部-erp技术一面-电话面","link":"#数字零售技术部-erp技术一面-电话面","children":[]},{"level":3,"title":"二面（电话面）","slug":"二面-电话面","link":"#二面-电话面","children":[]}]},{"level":2,"title":"阿里","slug":"阿里","link":"#阿里","children":[]},{"level":2,"title":"阿里外包/一面","slug":"阿里外包-一面","link":"#阿里外包-一面","children":[]},{"level":2,"title":"蚂蚁","slug":"蚂蚁","link":"#蚂蚁","children":[{"level":3,"title":"工具开发一面（电话面）","slug":"工具开发一面-电话面","link":"#工具开发一面-电话面","children":[]},{"level":3,"title":"工具开发二面（电话面）","slug":"工具开发二面-电话面","link":"#工具开发二面-电话面","children":[]},{"level":3,"title":"工具开发三面","slug":"工具开发三面","link":"#工具开发三面","children":[]}]},{"level":2,"title":"百度","slug":"百度","link":"#百度","children":[]},{"level":2,"title":"百度后端研发工程师","slug":"百度后端研发工程师","link":"#百度后端研发工程师","children":[]},{"level":2,"title":"京东 golang","slug":"京东-golang","link":"#京东-golang","children":[{"level":3,"title":"一面 60min","slug":"一面-60min","link":"#一面-60min","children":[]},{"level":3,"title":"二面 35mn","slug":"二面-35mn","link":"#二面-35mn","children":[]}]},{"level":2,"title":"京东","slug":"京东","link":"#京东","children":[{"level":3,"title":"一面","slug":"一面-2","link":"#一面-2","children":[]},{"level":3,"title":"二面","slug":"二面-2","link":"#二面-2","children":[]}]},{"level":2,"title":"京东一面 （30min ）","slug":"京东一面-30min","link":"#京东一面-30min","children":[{"level":3,"title":"微服务中间件开发部门","slug":"微服务中间件开发部门","link":"#微服务中间件开发部门","children":[]}]},{"level":2,"title":"PDD 一面/Java","slug":"pdd-一面-java","link":"#pdd-一面-java","children":[]},{"level":2,"title":"PDD服务端开发","slug":"pdd服务端开发","link":"#pdd服务端开发","children":[]},{"level":2,"title":"酷狗音乐","slug":"酷狗音乐","link":"#酷狗音乐","children":[{"level":3,"title":"一面","slug":"一面-3","link":"#一面-3","children":[]},{"level":3,"title":"二面","slug":"二面-3","link":"#二面-3","children":[]}]},{"level":2,"title":"b站外包/go开发/一面","slug":"b站外包-go开发-一面","link":"#b站外包-go开发-一面","children":[]},{"level":2,"title":"b站外包","slug":"b站外包","link":"#b站外包","children":[]},{"level":2,"title":"360 一面","slug":"_360-一面","link":"#_360-一面","children":[]},{"level":2,"title":"360 二面","slug":"_360-二面","link":"#_360-二面","children":[]},{"level":2,"title":"360 三面","slug":"_360-三面","link":"#_360-三面","children":[]},{"level":2,"title":"好未来","slug":"好未来","link":"#好未来","children":[]},{"level":2,"title":"深信服","slug":"深信服","link":"#深信服","children":[]},{"level":2,"title":"北京贝壳外包","slug":"北京贝壳外包","link":"#北京贝壳外包","children":[]},{"level":2,"title":"网易外包/Go后端开发","slug":"网易外包-go后端开发","link":"#网易外包-go后端开发","children":[{"level":3,"title":"一面","slug":"一面-4","link":"#一面-4","children":[]},{"level":3,"title":"二面","slug":"二面-4","link":"#二面-4","children":[]}]},{"level":2,"title":"面经详解跳转链接","slug":"面经详解跳转链接","link":"#面经详解跳转链接","children":[]}],"git":{"createdTime":1736316896000,"updatedTime":1736316896000,"contributors":[{"name":"xiaoxie001","username":"xiaoxie001","email":"xie18115@outlook.com","commits":1,"url":"https://github.com/xiaoxie001"}]},"readingTime":{"minutes":50.69,"words":15207},"filePathRelative":"golang/面试/大厂面试题.md","localizedDate":"2020年1月1日","autoDesc":true,"excerpt":"<h2>腾讯一面</h2>\\n<ol>\\n<li>协程池的作用?</li>\\n<li>内存逃逸分析?</li>\\n<li>go的内存回收什么条件会触发? go的GC能够手动触发吗?</li>\\n<li>channel的底层实现? 有缓冲的,无缓冲的channel, 如果管道已经关闭了, 读取会不会发生错误?</li>\\n<li>切片使用的时候需要注意什么?</li>\\n<li>go中的参数传递是值传递还是引用传递?</li>\\n<li>defer的执行顺序?</li>\\n<li>100G的文件, 统计出所有英文字母, 按照字母表顺序输出</li>\\n<li>linux如何分割文件?</li>\\n<li>接口性能如何优化?</li>\\n<li>什么情况会全表扫描?</li>\\n<li>主丛同步的原理? mysql还有什么相关的log文件?</li>\\n<li>分布式锁的原理?</li>\\n</ol>"}');export{d as comp,o as data};
