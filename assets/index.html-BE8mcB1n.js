import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as a,d as r,a as t,e as i,f as o,b as l,r as g,o as d}from"./app-DnV93lOH.js";const p={};function u(c,n){const e=g("RouteLink");return d(),a("div",null,[n[4]||(n[4]=r('<div class="hint-container tip"><p class="hint-container-title">提示</p><p>数据库模块：每个数据库将概念和go实际使用两个模块，另外有高级使用再另写一个文件</p></div><h2 id="关系型数据库" tabindex="-1"><a class="header-anchor" href="#关系型数据库"><span>关系型数据库</span></a></h2><p><strong>关系数据库（RDBMS）特点：</strong></p><ul><li><strong>结构化数据</strong>: 数据以表格形式存储，每个表有固定的列和行，数据之间通过外键关联。</li><li><strong>ACID属性</strong>: 支持原子性（Atomicity）、一致性（Consistency）、隔离性（Isolation）和持久性（Durability），确保事务的完整性和数据的准确性。</li><li><strong>SQL支持</strong>: 使用结构化查询语言（SQL）进行数据操作和查询，学习曲线相对平缓。</li><li><strong>Schema固定</strong>: 表的结构一旦确定，修改比较困难。</li><li><strong>适合复杂查询</strong>: 对于复杂的多表联接、子查询等操作表现优秀。</li><li><strong>数据一致性强</strong>: 适合需要严格数据完整性和事务处理的应用场景。</li><li><strong>扩展性</strong>: 传统上扩展性不如NoSQL，但在现代通过分片（sharding）等技术也可以实现水平扩展。</li></ul><h3 id="目录" tabindex="-1"><a class="header-anchor" href="#目录"><span>目录</span></a></h3>',5)),t("ul",null,[t("li",null,[i(e,{to:"/middleware/%E6%95%B0%E6%8D%AE%E5%BA%93/MySQL.html"},{default:o(()=>n[0]||(n[0]=[t("code",null,"MySQL",-1),l(" ：开源，广泛用于Web应用")])),_:1})])]),n[5]||(n[5]=r('<hr><ul><li><strong>SQLite</strong>: 轻量级的嵌入式数据库，适合移动和小型应用</li><li><strong>PostgreSQL</strong>: 开源，功能丰富，支持复杂查询</li></ul><h2 id="非关系型数据库" tabindex="-1"><a class="header-anchor" href="#非关系型数据库"><span>非关系型数据库</span></a></h2><p><strong>非关系数据库（NoSQL）特点：</strong></p><ul><li><strong>灵活的数据模型</strong>: 支持多种数据类型（键值对、文档、宽列、图等），允许更灵活的数据存储。</li><li><strong>高扩展性</strong>: 设计上更适合分布式系统，容易水平扩展（添加更多节点来处理更多数据）。</li><li><strong>BASE原则</strong>: 强调基本可用性（Basically Available）、软状态（Soft state）和最终一致性（Eventual consistency），这意味着在某些情况下可以牺牲一些数据一致性以换取更高的可用性和性能。</li><li><strong>没有固定的Schema</strong>: 允许数据结构的变化和扩展，适用于处理动态或半结构化数据。</li><li><strong>高性能读写</strong>: 特别是在处理大量数据时，NoSQL数据库在读写性能上可能优于RDBMS。</li><li><strong>多种查询语言</strong>: 虽然有些NoSQL数据库支持SQL，但更多的是使用特定的查询语言或API。</li><li><strong>适合大数据应用</strong>: 像日志分析、内容管理、实时大数据处理等场景。</li></ul><h3 id="目录-1" tabindex="-1"><a class="header-anchor" href="#目录-1"><span>目录</span></a></h3>',6)),t("ul",null,[t("li",null,[t("p",null,[i(e,{to:"/middleware/%E6%95%B0%E6%8D%AE%E5%BA%93/Redis.html"},{default:o(()=>n[1]||(n[1]=[t("code",null,"Redis",-1),l(": 内存中的数据结构存储系统，常用于缓存和实时分析")])),_:1})])]),t("li",null,[t("p",null,[i(e,{to:"/middleware/%E6%95%B0%E6%8D%AE%E5%BA%93/MongoDB.html"},{default:o(()=>n[2]||(n[2]=[t("code",null,"MongoDB",-1),l(": 文档型NoSQL数据库，灵活的数据模型，适合处理大量非结构化数据")])),_:1})])]),t("li",null,[t("p",null,[i(e,{to:"/middleware/%E6%95%B0%E6%8D%AE%E5%BA%93/Elasticsearch.html"},{default:o(()=>n[3]||(n[3]=[t("code",null,"Elasticsearch",-1),l(": 搜索和分析引擎，基于Lucene，擅长全文搜索、日志分析。")])),_:1})])])]),n[6]||(n[6]=t("hr",null,null,-1)),n[7]||(n[7]=t("ul",null,[t("li",null,[t("strong",null,"Neo4j"),l(": 图数据库，擅长处理复杂关系数据")])],-1))])}const E=s(p,[["render",u],["__file","index.html.vue"]]),y=JSON.parse('{"path":"/middleware/%E6%95%B0%E6%8D%AE%E5%BA%93/","title":"数据库","lang":"zh-CN","frontmatter":{"index":false,"title":"数据库","icon":"database","description":"提示 数据库模块：每个数据库将概念和go实际使用两个模块，另外有高级使用再另写一个文件 关系型数据库 关系数据库（RDBMS）特点： 结构化数据: 数据以表格形式存储，每个表有固定的列和行，数据之间通过外键关联。 ACID属性: 支持原子性（Atomicity）、一致性（Consistency）、隔离性（Isolation）和持久性（Durabilit...","head":[["meta",{"property":"og:url","content":"https://Cospk.github.io/vuepress-app/middleware/%E6%95%B0%E6%8D%AE%E5%BA%93/"}],["meta",{"property":"og:site_name","content":"Golang全栈指南"}],["meta",{"property":"og:title","content":"数据库"}],["meta",{"property":"og:description","content":"提示 数据库模块：每个数据库将概念和go实际使用两个模块，另外有高级使用再另写一个文件 关系型数据库 关系数据库（RDBMS）特点： 结构化数据: 数据以表格形式存储，每个表有固定的列和行，数据之间通过外键关联。 ACID属性: 支持原子性（Atomicity）、一致性（Consistency）、隔离性（Isolation）和持久性（Durabilit..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-15T09:37:41.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-15T09:37:41.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"数据库\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2025-01-15T09:37:41.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cospk\\",\\"url\\":\\"https://savvygo.cn\\"}]}"]]},"headers":[{"level":2,"title":"关系型数据库","slug":"关系型数据库","link":"#关系型数据库","children":[{"level":3,"title":"目录","slug":"目录","link":"#目录","children":[]}]},{"level":2,"title":"非关系型数据库","slug":"非关系型数据库","link":"#非关系型数据库","children":[{"level":3,"title":"目录","slug":"目录-1","link":"#目录-1","children":[]}]}],"git":{"createdTime":1734622519000,"updatedTime":1736933861000,"contributors":[{"name":"xiaoxie001","username":"xiaoxie001","email":"xie18115@outlook.com","commits":2,"url":"https://github.com/xiaoxie001"}]},"readingTime":{"minutes":2.21,"words":664},"filePathRelative":"middleware/数据库/README.md","localizedDate":"2024年12月19日","autoDesc":true,"excerpt":"<div class=\\"hint-container tip\\">\\n<p class=\\"hint-container-title\\">提示</p>\\n<p>数据库模块：每个数据库将概念和go实际使用两个模块，另外有高级使用再另写一个文件</p>\\n</div>\\n<h2>关系型数据库</h2>\\n<p><strong>关系数据库（RDBMS）特点：</strong></p>\\n<ul>\\n<li><strong>结构化数据</strong>: 数据以表格形式存储，每个表有固定的列和行，数据之间通过外键关联。</li>\\n<li><strong>ACID属性</strong>: 支持原子性（Atomicity）、一致性（Consistency）、隔离性（Isolation）和持久性（Durability），确保事务的完整性和数据的准确性。</li>\\n<li><strong>SQL支持</strong>: 使用结构化查询语言（SQL）进行数据操作和查询，学习曲线相对平缓。</li>\\n<li><strong>Schema固定</strong>: 表的结构一旦确定，修改比较困难。</li>\\n<li><strong>适合复杂查询</strong>: 对于复杂的多表联接、子查询等操作表现优秀。</li>\\n<li><strong>数据一致性强</strong>: 适合需要严格数据完整性和事务处理的应用场景。</li>\\n<li><strong>扩展性</strong>: 传统上扩展性不如NoSQL，但在现代通过分片（sharding）等技术也可以实现水平扩展。</li>\\n</ul>"}');export{E as comp,y as data};
